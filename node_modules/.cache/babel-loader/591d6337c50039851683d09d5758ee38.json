{"ast":null,"code":"import moment from \"moment\";\nexport function getVideoTrailer(videos) {\n  var videoID = null;\n\n  if (videos && videos.length > 0) {\n    var video = videos.find(video => video.name === \"Trailer\");\n\n    if (!video) {\n      //If no trailer, take the first video\n      videoID = videos[0].video_id;\n    } else {\n      videoID = video.video_id;\n    }\n  }\n\n  return videoID;\n}\nexport function getRandom(arr, n) {\n  var result = new Array(n),\n      len = arr.length,\n      taken = new Array(len);\n  if (n > len) throw new RangeError(\"getRandom: more elements taken than available\");\n\n  while (n--) {\n    var x = Math.floor(Math.random() * len);\n    result[n] = arr[x in taken ? taken[x] : x];\n    taken[x] = --len in taken ? taken[len] : len;\n  }\n\n  return result;\n}\nexport function findDeveloper(involved_companies) {\n  let company = null;\n\n  if (involved_companies) {\n    involved_companies.forEach(involved_company => {\n      if (involved_company.developer === true) {\n        company = {\n          name: involved_company.company.name,\n          logoID: involved_company.company.logo ? involved_company.company.logo.image_id : null\n        };\n      }\n    });\n  }\n\n  return company;\n}\nexport function getElapsedTime(dates, firstReleaseDateUnix) {\n  let releaseDate = null;\n\n  if (dates && Array.isArray(dates) && firstReleaseDateUnix) {\n    dates.forEach(date => {\n      if (date.date === firstReleaseDateUnix) {\n        if (date.category !== undefined && date.category === 0) {\n          releaseDate = {\n            elapsedTime: moment.unix(date.date).fromNow(),\n            date: date.human\n          };\n        } else {\n          releaseDate = {\n            date: date.human\n          };\n        }\n\n        return releaseDate;\n      }\n    });\n  } else if (dates) {\n    if (dates.category !== undefined && dates.category === 0) {\n      releaseDate = {\n        elapsedTime: moment.unix(dates.date).fromNow(),\n        date: dates.human\n      };\n    } else {\n      releaseDate = {\n        date: dates.human\n      };\n    }\n\n    return releaseDate;\n  }\n\n  return releaseDate;\n}","map":{"version":3,"sources":["/Users/bdeguigne/Documents/Game Bringer/src/utils/requestFormat.js"],"names":["moment","getVideoTrailer","videos","videoID","length","video","find","name","video_id","getRandom","arr","n","result","Array","len","taken","RangeError","x","Math","floor","random","findDeveloper","involved_companies","company","forEach","involved_company","developer","logoID","logo","image_id","getElapsedTime","dates","firstReleaseDateUnix","releaseDate","isArray","date","category","undefined","elapsedTime","unix","fromNow","human"],"mappings":"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","sourcesContent":["import moment from \"moment\";\n\nexport function getVideoTrailer(videos) {\n    var videoID = null;\n\n    if (videos && videos.length > 0) {\n        var video = videos.find(video => video.name === \"Trailer\");\n\n        if (!video) {\n            //If no trailer, take the first video\n            videoID = videos[0].video_id;\n        } else {\n            videoID = video.video_id;\n        }\n    }\n\n    return videoID;\n}\n\nexport function getRandom(arr, n) {\n    var result = new Array(n),\n        len = arr.length,\n        taken = new Array(len);\n    if (n > len)\n        throw new RangeError(\"getRandom: more elements taken than available\");\n    while (n--) {\n        var x = Math.floor(Math.random() * len);\n        result[n] = arr[x in taken ? taken[x] : x];\n        taken[x] = --len in taken ? taken[len] : len;\n    }\n    return result;\n}\n\nexport function findDeveloper(involved_companies) {\n    let company = null;\n    if (involved_companies) {\n        involved_companies.forEach(involved_company => {\n            if (involved_company.developer === true) {\n                company = {\n                    name: involved_company.company.name,\n                    logoID: involved_company.company.logo ? involved_company.company.logo.image_id : null\n                }\n            }\n        })\n    }\n    return company;\n}\n\nexport function getElapsedTime(dates, firstReleaseDateUnix) {\n    let releaseDate = null;\n    if (dates && Array.isArray(dates) && firstReleaseDateUnix) {\n        dates.forEach(date => {\n            if (date.date === firstReleaseDateUnix) {\n                if (date.category !== undefined && date.category === 0) {\n                    releaseDate = {\n                        elapsedTime: moment.unix(date.date).fromNow(),\n                        date: date.human,\n                    }\n                } else {\n                    releaseDate = {\n                        date: date.human\n                    }\n                }\n                return releaseDate;\n\n            }\n        })\n    } else if (dates) {\n        if (dates.category !== undefined && dates.category === 0) {\n            releaseDate = {\n                elapsedTime: moment.unix(dates.date).fromNow(),\n                date: dates.human,\n            }\n        } else {\n            releaseDate = {\n                date: dates.human\n            }\n        }\n        return releaseDate;\n    }\n    return releaseDate;\n}\n"]},"metadata":{},"sourceType":"module"}