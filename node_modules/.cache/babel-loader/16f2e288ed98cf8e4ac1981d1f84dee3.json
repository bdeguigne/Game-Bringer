{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bdeguigne/Documents/Game Bringer/src/components/TopRatedGames.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { connect } from \"react-redux\";\nimport GameShowcase from \"./GameShowcase\";\nimport styled from \"styled-components\";\nimport Glide from \"@glidejs/glide\";\nimport { appColors, gameShowNeonBoxShadow, SectionTitle, ArrowIcon } from \"../utils/styles\";\nconst Container = styled.div`\n  margin-top: 0;\n  margin-bottom: 48px;\n  border-radius: 32px;\n`;\n_c = Container;\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`; // const Title = styled.h3`\n//   margin-top: 32px;\n//   margin-bottom: 48px;\n// `;\n\n_c2 = Header;\nconst SliderWrapper = styled.div`\n  transition: box-shadow,border 1s;\n  z-index: 10;\n  border: 2px solid ${props => props.isLoading === false ? \"white\" : appColors.secondaryDarker};\n  border-radius: 32px;\n  box-shadow: ${props => props.isLoading === false && gameShowNeonBoxShadow} ;\n`;\n_c3 = SliderWrapper;\nconst Slider = styled.div`\n  border-radius: 32px;\n  overflow: hidden;\n  user-select: none;\n  //height: 225px;\n  //padding-top: 16px;\n  width: 100%;\n  height: 620px;\n  position: relative;\n\n  @media only screen and (min-width: 768px) {\n    height: 450px;\n  }\n`;\n_c4 = Slider;\nconst Slide = styled.div`\n  display: flex;\n`;\n_c5 = Slide;\nconst ArrowsContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 3;\n  padding: 16px;\n  width: fit-content;\ndisplay: flex;\n  \n  @media only screen and (min-width: 768px) {\n    top: initial;\n    bottom: 0;\n    left: 30%;\n    padding: 32px;\n  }\n\n`;\n_c6 = ArrowsContainer;\nconst RoundedArrowIconContainer = styled.div`\n  \n  background: ${appColors.backgroundColor};\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  padding: 12px 14px;\n  align-items: center;\n  margin-left: 4px;\n\n  @media only screen and (min-width: 768px) {\n    background: none;\n    padding: 0 8px;\n  }\n`;\n_c7 = RoundedArrowIconContainer;\nconst Icon = styled(ArrowIcon)`\n  font-size: 1.0rem;\n  color: white;\n  margin-left: ${props => props.left ? \"0\" : \"4px\"};\n  margin-right: ${props => props.right ? \"0\" : \"4px\"};\n\n  @media only screen and (min-width: 768px) {\n    font-size: 2.5rem;\n    color: ${appColors.secondaryDarker};\n  }\n`;\n_c8 = Icon;\nconst LoadingContainer = styled.div`\n  transition: opacity 0.5s;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  opacity: ${props => props.hide ? 0 : 1};\n  z-index: 3;\n`;\n_c9 = LoadingContainer;\nconst sliderConfiguration = {\n  type: \"carousel\",\n  startAt: 0,\n  animationTimingFunc: \"ease-in-out\",\n  perView: 1,\n  focusAt: 0\n};\n\nfunction TopRatedGames({\n  games\n}) {\n  _s();\n\n  const [slider] = useState(new Glide(`#topRatedSlider`, sliderConfiguration));\n  const [sliderLoaded, setSliderLoaded] = useState(false);\n  const [hideSkeleton, setHideSkeleton] = useState(false);\n  const [removeSkeleton, setRemoveSkeleton] = useState(false);\n  const [currentIndex, setCurrentIndex] = useState(0);\n  useEffect(() => {\n    if (games.length > 0 && sliderLoaded === false) {\n      slider.on(['mount.after', 'run'], () => {\n        const currentIndex = slider.index;\n        setCurrentIndex(currentIndex);\n      });\n      slider.mount();\n      setSliderLoaded(true);\n    }\n  }, [slider, games, sliderLoaded]);\n  useEffect(() => {\n    if (hideSkeleton === true) {\n      setTimeout(() => {\n        setRemoveSkeleton(true);\n      }, 500);\n    }\n  }, [hideSkeleton]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Header, {\n      children: /*#__PURE__*/_jsxDEV(SectionTitle, {\n        children: \"Top Rated Games\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SliderWrapper, {\n      isLoading: !hideSkeleton,\n      children: /*#__PURE__*/_jsxDEV(Slider, {\n        id: \"topRatedSlider\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"glide__track\",\n          \"data-glide-el\": \"track\",\n          children: [/*#__PURE__*/_jsxDEV(Slide, {\n            className: \"glide__slides\",\n            children: games.length > 0 && games.map((game, index) => {\n              return /*#__PURE__*/_jsxDEV(GameShowcase, {\n                showed: currentIndex === index,\n                data: game,\n                darkerImage: true,\n                isLoading: false,\n                onLoad: () => !hideSkeleton && setHideSkeleton(true)\n              }, index, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 41\n              }, this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(ArrowsContainer, {\n            children: [/*#__PURE__*/_jsxDEV(RoundedArrowIconContainer, {\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                onClick: () => slider.go(\"<\"),\n                className: \"icon-arrow-left\",\n                left: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 164,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(RoundedArrowIconContainer, {\n              children: /*#__PURE__*/_jsxDEV(Icon, {\n                onClick: () => slider.go(\">\"),\n                className: \"icon-arrow-right\",\n                right: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this), !removeSkeleton && /*#__PURE__*/_jsxDEV(LoadingContainer, {\n          hide: hideSkeleton,\n          children: /*#__PURE__*/_jsxDEV(GameShowcase, {\n            isLoading: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TopRatedGames, \"NyfPDoS3IscKqj49mbXWHrQGMK8=\");\n\n_c10 = TopRatedGames;\n\nfunction mapStateToProps(state) {\n  return {\n    games: state.homePageRequests.bestRatedGamesThisMonth\n  };\n}\n\nconst connectedTopRatedGames = connect(mapStateToProps)(TopRatedGames);\nexport default connectedTopRatedGames;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7, _c8, _c9, _c10;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"Header\");\n$RefreshReg$(_c3, \"SliderWrapper\");\n$RefreshReg$(_c4, \"Slider\");\n$RefreshReg$(_c5, \"Slide\");\n$RefreshReg$(_c6, \"ArrowsContainer\");\n$RefreshReg$(_c7, \"RoundedArrowIconContainer\");\n$RefreshReg$(_c8, \"Icon\");\n$RefreshReg$(_c9, \"LoadingContainer\");\n$RefreshReg$(_c10, \"TopRatedGames\");","map":{"version":3,"sources":["/Users/bdeguigne/Documents/Game Bringer/src/components/TopRatedGames.js"],"names":["React","useEffect","useState","connect","GameShowcase","styled","Glide","appColors","gameShowNeonBoxShadow","SectionTitle","ArrowIcon","Container","div","Header","SliderWrapper","props","isLoading","secondaryDarker","Slider","Slide","ArrowsContainer","RoundedArrowIconContainer","backgroundColor","Icon","left","right","LoadingContainer","hide","sliderConfiguration","type","startAt","animationTimingFunc","perView","focusAt","TopRatedGames","games","slider","sliderLoaded","setSliderLoaded","hideSkeleton","setHideSkeleton","removeSkeleton","setRemoveSkeleton","currentIndex","setCurrentIndex","length","on","index","mount","setTimeout","map","game","go","mapStateToProps","state","homePageRequests","bestRatedGamesThisMonth","connectedTopRatedGames"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\nimport { connect } from \"react-redux\";\nimport GameShowcase from \"./GameShowcase\";\n\nimport styled from \"styled-components\";\nimport Glide from \"@glidejs/glide\";\nimport {appColors, gameShowNeonBoxShadow, SectionTitle, ArrowIcon} from \"../utils/styles\";\n\nconst Container = styled.div`\n  margin-top: 0;\n  margin-bottom: 48px;\n  border-radius: 32px;\n`\n\nconst Header = styled.div`\n  display: flex;\n  justify-content: space-between;\n`\n\n// const Title = styled.h3`\n//   margin-top: 32px;\n//   margin-bottom: 48px;\n// `;\n\nconst SliderWrapper = styled.div`\n  transition: box-shadow,border 1s;\n  z-index: 10;\n  border: 2px solid ${props => props.isLoading === false ? \"white\" : appColors.secondaryDarker};\n  border-radius: 32px;\n  box-shadow: ${props => props.isLoading === false && gameShowNeonBoxShadow} ;\n`\n\nconst Slider = styled.div`\n  border-radius: 32px;\n  overflow: hidden;\n  user-select: none;\n  //height: 225px;\n  //padding-top: 16px;\n  width: 100%;\n  height: 620px;\n  position: relative;\n\n  @media only screen and (min-width: 768px) {\n    height: 450px;\n  }\n`\n\nconst Slide = styled.div`\n  display: flex;\n`\n\nconst ArrowsContainer = styled.div`\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 3;\n  padding: 16px;\n  width: fit-content;\ndisplay: flex;\n  \n  @media only screen and (min-width: 768px) {\n    top: initial;\n    bottom: 0;\n    left: 30%;\n    padding: 32px;\n  }\n\n`\n\nconst RoundedArrowIconContainer = styled.div`\n  \n  background: ${appColors.backgroundColor};\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  padding: 12px 14px;\n  align-items: center;\n  margin-left: 4px;\n\n  @media only screen and (min-width: 768px) {\n    background: none;\n    padding: 0 8px;\n  }\n`\n\nconst Icon = styled(ArrowIcon)`\n  font-size: 1.0rem;\n  color: white;\n  margin-left: ${props => props.left ? \"0\" : \"4px\"};\n  margin-right: ${props => props.right ? \"0\" : \"4px\"};\n\n  @media only screen and (min-width: 768px) {\n    font-size: 2.5rem;\n    color: ${appColors.secondaryDarker};\n  }\n`\n\nconst LoadingContainer = styled.div`\n  transition: opacity 0.5s;\n  position: absolute;\n  width: 100%;\n  top: 0;\n  left: 0;\n  opacity: ${props => props.hide ? 0 : 1};\n  z-index: 3;\n`\n\nconst sliderConfiguration = {\n    type: \"carousel\",\n    startAt: 0,\n    animationTimingFunc: \"ease-in-out\",\n    perView: 1,\n    focusAt: 0,\n}\n\nfunction TopRatedGames({games}) {\n\n    const [slider] = useState(new Glide(`#topRatedSlider`, sliderConfiguration));\n    const [sliderLoaded, setSliderLoaded] = useState(false);\n    const [hideSkeleton, setHideSkeleton] = useState(false);\n    const [removeSkeleton, setRemoveSkeleton] = useState(false);\n    const [currentIndex, setCurrentIndex] = useState(0);\n\n    useEffect(() => {\n        if (games.length > 0 && sliderLoaded === false) {\n            slider.on(['mount.after', 'run'], () => {\n                const currentIndex = slider.index;\n                setCurrentIndex(currentIndex);\n            })\n\n            slider.mount();\n            setSliderLoaded(true);\n        }\n    }, [slider, games, sliderLoaded]);\n\n    useEffect(() => {\n        if (hideSkeleton === true) {\n            setTimeout(() => {\n                setRemoveSkeleton(true);\n            }, 500)\n        }\n    }, [hideSkeleton]);\n\n\n    return (\n        <Container>\n            <Header>\n                <SectionTitle>\n                    Top Rated Games\n                </SectionTitle>\n            </Header>\n            <SliderWrapper isLoading={!hideSkeleton}>\n                <Slider id=\"topRatedSlider\">\n                    <div className=\"glide__track\" data-glide-el=\"track\">\n                        <Slide className=\"glide__slides\">\n                            {games.length > 0 && games.map((game, index) => {\n                                    return (\n                                        <GameShowcase showed={currentIndex === index} key={index} data={game} darkerImage={true} isLoading={false} onLoad={() => !hideSkeleton && setHideSkeleton(true)}/>\n                                    )\n                                }\n                            )}\n                        </Slide>\n                        <ArrowsContainer>\n                            <RoundedArrowIconContainer>\n                                <Icon onClick={() => slider.go(\"<\")} className=\"icon-arrow-left\" left={true}/>\n                            </RoundedArrowIconContainer>\n                            <RoundedArrowIconContainer>\n                                <Icon onClick={() => slider.go(\">\")} className=\"icon-arrow-right\" right={true}/>\n                            </RoundedArrowIconContainer>\n                        </ArrowsContainer>\n                    </div>\n                    {!removeSkeleton && (\n                        <LoadingContainer hide={hideSkeleton}>\n                            <GameShowcase isLoading={true}/>\n                        </LoadingContainer>\n                    )}\n                </Slider>\n            </SliderWrapper>\n            {/*{games.length > 0 && (*/}\n            {/*    <GameShowcase showed={true} data={games[0]} darkerImage={true} isLoading={false} onLoad={() => !hideSkeleton && setHideSkeleton(true)}/>*/}\n            {/*)}*/}\n        </Container>\n    );\n}\n\nfunction mapStateToProps(state) {\n    return {\n        games: state.homePageRequests.bestRatedGamesThisMonth\n    }\n}\n\nconst connectedTopRatedGames = connect(mapStateToProps)(TopRatedGames);\n\nexport default connectedTopRatedGames;"]},"metadata":{},"sourceType":"module"}