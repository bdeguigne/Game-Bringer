{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/bdeguigne/Downloads/backup onedrive de mort/Game Bringer/src/components/CarouselIndicator.js\";\nimport React from \"react\";\nimport { FiberManualRecordRounded, ArrowBackIos, ArrowForwardIos } from \"@material-ui/icons\";\nimport { ButtonBase, IconButton } from \"@material-ui/core\";\nimport { CircularProgress } from '@material-ui/core';\nimport styled from 'styled-components';\nimport { appColors, carousel } from '../utils/styles';\nconst ArrowContainer = styled.div`\n  display: none;\n  //\n  @media only screen and (min-width: 768px) {\n    display: block;\n  }\n`;\n_c = ArrowContainer;\nconst Container = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`;\n_c2 = Container;\nconst ArrowButton = styled(IconButton)`\n  margin-left: 16px !important;\n  margin-right: 16px !important;\n`;\n_c3 = ArrowButton;\nconst Indicator = styled(ButtonBase)`\n  width: 24px !important;\n  border-radius: 100% !important;\n`;\n_c4 = Indicator;\nconst Loading = styled(CircularProgress)`\n  width: 24px !important;\n  height: 24px !important;\n`;\n_c5 = Loading;\nconst RoundedIcon = styled(FiberManualRecordRounded)`\n  border-radius: 50% !important;\n  transition: color 0.3s ease !important;\n  color: ${props => props.isselected === \"true\" ? appColors[300] : appColors.secondaryDarker};\n  box-shadow: ${props => props.isselected === \"true\" ? carousel.indicatorBoxShadow : \"none\"};\n`;\n_c6 = RoundedIcon;\n\nfunction CarouselIndicator({\n  itemCount,\n  onClick,\n  selectedIndex,\n  setSelectedIndex,\n  loadingStatus,\n  onLeftArrowClick,\n  onRightArrowClick\n}) {\n  const handler = index => {\n    setSelectedIndex(index);\n    onClick(index);\n  };\n\n  const leftArrowHandler = () => {\n    setSelectedIndex(selectedIndex - 1);\n\n    if (onLeftArrowClick) {\n      onLeftArrowClick();\n    }\n  };\n\n  const rightArrowHandler = () => {\n    setSelectedIndex(selectedIndex + 1);\n\n    if (onRightArrowClick) {\n      onRightArrowClick();\n    }\n  };\n\n  const isActive = (selectedIndex, i) => {\n    return selectedIndex === i;\n  };\n\n  if (loadingStatus === null) {\n    return /*#__PURE__*/_jsxDEV(Container, {\n      children: [/*#__PURE__*/_jsxDEV(ArrowContainer, {\n        children: /*#__PURE__*/_jsxDEV(ArrowButton, {\n          size: \"medium\",\n          onClick: leftArrowHandler,\n          children: /*#__PURE__*/_jsxDEV(ArrowBackIos, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this), Array.from(Array(itemCount), (e, i) => {\n        return /*#__PURE__*/_jsxDEV(Indicator, {\n          onClick: () => handler(i),\n          isselected: isActive(selectedIndex, i).toString(),\n          children: /*#__PURE__*/_jsxDEV(RoundedIcon, {\n            isselected: isActive(selectedIndex, i).toString()\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 29\n          }, this)\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 25\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(ArrowContainer, {\n        children: /*#__PURE__*/_jsxDEV(ArrowButton, {\n          size: \"medium\",\n          onClick: rightArrowHandler,\n          children: /*#__PURE__*/_jsxDEV(ArrowForwardIos, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(Loading, {\n      value: loadingStatus,\n      variant: \"determinate\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 13\n    }, this);\n  }\n}\n\n_c7 = CarouselIndicator;\nexport default CarouselIndicator;\n\nvar _c, _c2, _c3, _c4, _c5, _c6, _c7;\n\n$RefreshReg$(_c, \"ArrowContainer\");\n$RefreshReg$(_c2, \"Container\");\n$RefreshReg$(_c3, \"ArrowButton\");\n$RefreshReg$(_c4, \"Indicator\");\n$RefreshReg$(_c5, \"Loading\");\n$RefreshReg$(_c6, \"RoundedIcon\");\n$RefreshReg$(_c7, \"CarouselIndicator\");","map":{"version":3,"sources":["/Users/bdeguigne/Downloads/backup onedrive de mort/Game Bringer/src/components/CarouselIndicator.js"],"names":["React","FiberManualRecordRounded","ArrowBackIos","ArrowForwardIos","ButtonBase","IconButton","CircularProgress","styled","appColors","carousel","ArrowContainer","div","Container","ArrowButton","Indicator","Loading","RoundedIcon","props","isselected","secondaryDarker","indicatorBoxShadow","CarouselIndicator","itemCount","onClick","selectedIndex","setSelectedIndex","loadingStatus","onLeftArrowClick","onRightArrowClick","handler","index","leftArrowHandler","rightArrowHandler","isActive","i","Array","from","e","toString"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FiberManualRecordRounded, ArrowBackIos, ArrowForwardIos } from \"@material-ui/icons\";\nimport { ButtonBase, IconButton } from \"@material-ui/core\";\nimport { CircularProgress } from '@material-ui/core';\nimport styled from 'styled-components';\nimport {appColors, carousel} from '../utils/styles'\n\nconst ArrowContainer = styled.div`\n  display: none;\n  //\n  @media only screen and (min-width: 768px) {\n    display: block;\n  }\n`\n\nconst Container = styled.div`\n  margin-bottom: 24px;\n  display: flex;\n  justify-content: center;\n  width: 100%;\n`\n\nconst ArrowButton = styled(IconButton)`\n  margin-left: 16px !important;\n  margin-right: 16px !important;\n`\n\nconst Indicator = styled(ButtonBase)`\n  width: 24px !important;\n  border-radius: 100% !important;\n`\n\nconst Loading = styled(CircularProgress)`\n  width: 24px !important;\n  height: 24px !important;\n`\n\nconst RoundedIcon = styled(FiberManualRecordRounded)`\n  border-radius: 50% !important;\n  transition: color 0.3s ease !important;\n  color: ${props => props.isselected === \"true\" ? appColors[300] : appColors.secondaryDarker };\n  box-shadow: ${props => props.isselected === \"true\" ? carousel.indicatorBoxShadow : \"none\"};\n`\n\nfunction CarouselIndicator({ itemCount, onClick, selectedIndex, setSelectedIndex, loadingStatus, onLeftArrowClick, onRightArrowClick }) {\n\n    const handler = (index) => {\n        setSelectedIndex(index);\n        onClick(index);\n    }\n\n    const leftArrowHandler = () => {\n        setSelectedIndex(selectedIndex - 1);\n        if (onLeftArrowClick) {\n            onLeftArrowClick();\n        }\n    }\n\n    const rightArrowHandler = () => {\n        setSelectedIndex(selectedIndex + 1);\n        if (onRightArrowClick) {\n            onRightArrowClick();\n        }\n    }\n\n    const isActive = (selectedIndex, i) => {\n        return selectedIndex === i;\n    }\n\n    if (loadingStatus === null) {\n        return (\n            <Container>\n                <ArrowContainer>\n                    <ArrowButton size=\"medium\" onClick={leftArrowHandler}>\n                        <ArrowBackIos />\n                    </ArrowButton>\n                </ArrowContainer>\n                {Array.from(Array(itemCount), (e, i) => {\n                    return (\n                        <Indicator key={i} onClick={() => handler(i)} isselected={isActive(selectedIndex, i).toString()}>\n                            <RoundedIcon isselected={isActive(selectedIndex, i).toString()} />\n                        </Indicator>\n                    )\n                })}\n                <ArrowContainer>\n                    <ArrowButton size=\"medium\" onClick={rightArrowHandler}>\n                        <ArrowForwardIos />\n                    </ArrowButton>\n                </ArrowContainer>\n            </Container>\n        )\n    } else {\n        return (\n            <Loading value={loadingStatus} variant=\"determinate\" />\n        )\n    }\n}\n\nexport default CarouselIndicator;"]},"metadata":{},"sourceType":"module"}