{"ast":null,"code":"// TODO ENLEVER ACCESS TOKEN EN DUR\n// export const doRequest = (url, data) => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Client-ID\", \"e31044r4d7oqge4odpsqg7xeet90oz\");\n//     myHeaders.append(\"Authorization\", \"Bearer i7vmph6ootlnq25jw6t8whrzoh38pq\");\n//     myHeaders.append(\"Content-Type\", \"text/plain\");\n//     myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n//\n//     var requestOptions = {\n//         method: 'POST',\n//         headers: myHeaders,\n//         body: data,\n//         redirect: 'follow'\n//     };\n//\n//     return (fetch(url, requestOptions))\n// }\nexport const doRequest = (url, query) => {\n  //Request to the proxy server made by netflify function (proxy dev and production mode)\n  //Proxy configurations located in : /functions/node-fetch/node-fetch.js\n  return fetch(`/.netlify/functions/node-fetch?url=${encodeURIComponent(url)}&query=${encodeURIComponent(query)}`);\n};","map":{"version":3,"sources":["/Users/bdeguigne/Documents/Game Bringer/src/redux/services/request.js"],"names":["doRequest","url","query","fetch","encodeURIComponent"],"mappings":"AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,SAAS,GAAG,CAACC,GAAD,EAAMC,KAAN,KAAgB;AACrC;AACA;AACA,SAAQC,KAAK,CAAE,sCAAqCC,kBAAkB,CAACH,GAAD,CAAM,UAASG,kBAAkB,CAACF,KAAD,CAAQ,EAAlG,CAAb;AACH,CAJM","sourcesContent":["// TODO ENLEVER ACCESS TOKEN EN DUR\n\n// export const doRequest = (url, data) => {\n//     var myHeaders = new Headers();\n//     myHeaders.append(\"Client-ID\", \"e31044r4d7oqge4odpsqg7xeet90oz\");\n//     myHeaders.append(\"Authorization\", \"Bearer i7vmph6ootlnq25jw6t8whrzoh38pq\");\n//     myHeaders.append(\"Content-Type\", \"text/plain\");\n//     myHeaders.append(\"Access-Control-Allow-Origin\", \"*\");\n//\n//     var requestOptions = {\n//         method: 'POST',\n//         headers: myHeaders,\n//         body: data,\n//         redirect: 'follow'\n//     };\n//\n//     return (fetch(url, requestOptions))\n// }\n\nexport const doRequest = (url, query) => {\n    //Request to the proxy server made by netflify function (proxy dev and production mode)\n    //Proxy configurations located in : /functions/node-fetch/node-fetch.js\n    return (fetch(`/.netlify/functions/node-fetch?url=${encodeURIComponent(url)}&query=${encodeURIComponent(query)}`));\n}"]},"metadata":{},"sourceType":"module"}