{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bdeguigne/Documents/Game Bringer/src/components/Advanced Search/CheckboxFilter.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\nimport { advancedSearchPadding, appColors } from '../../utils/styles';\nimport { isFiltersExist } from './filters';\nconst Container = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 30px;\n    background: ${props => props.checked ? appColors.secondaryDarker : \"transparent\"};\n    padding: ${advancedSearchPadding};\n    transition: background 0.3s;\n`;\n_c = Container;\nconst SmallCheckBox = styled(Checkbox)`\n    opacity: ${props => props.opacity ? props.opacity : 1};\n`;\n_c2 = SmallCheckBox;\n\nfunction CheckboxFilter(props) {\n  _s();\n\n  // const [isActiveByUrl] = useState(props.active)\n  const [checked, setChecked] = useState(props.active);\n  const [exclude, setExclude] = useState(false);\n  let title = props.title;\n  let label = props.label;\n  let id = props.id.toString();\n  let onChange = props.onChange;\n\n  const sendChange = data => {\n    let results = {\n      title,\n      type: \"checkbox\",\n      slug: props.titleSlug || title.toLowerCase(),\n      data: data\n    };\n\n    if (onChange) {\n      onChange(results);\n    }\n  };\n\n  const handleChangeChecked = evt => {\n    let state = evt.target.checked;\n    setChecked(state);\n\n    if (checked === true && state === false) {\n      sendChange({\n        label,\n        slug: id,\n        checked: false,\n        remove: true,\n        exclude\n      });\n    } else {\n      sendChange({\n        label,\n        slug: id,\n        checked: true,\n        exclude\n      });\n    }\n\n    if (exclude === true) {\n      setExclude(false);\n    }\n  };\n\n  const handleChangeExclude = evt => {\n    let state = evt.target.checked;\n    setExclude(state);\n\n    if (checked === true) {\n      setChecked(false);\n    }\n  };\n\n  useEffect(() => {\n    let isExist = isFiltersExist(props.activatedFilters.chip, props.titleSlug, props.label);\n    setChecked(isExist);\n  }, [props.refresh]);\n  return /*#__PURE__*/_jsxDEV(Container, {\n    checked: checked || exclude,\n    children: [/*#__PURE__*/_jsxDEV(FormControlLabel, {\n      control: /*#__PURE__*/_jsxDEV(SmallCheckBox, {\n        checked: checked,\n        onChange: handleChangeChecked,\n        name: props.label,\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 21\n      }, this),\n      label: props.label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SmallCheckBox, {\n      indeterminate: true,\n      checked: exclude,\n      onChange: handleChangeExclude,\n      name: props.label,\n      color: \"secondary\",\n      opacity: \"0.5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 88,\n    columnNumber: 9\n  }, this);\n}\n\n_s(CheckboxFilter, \"Z24wmW0+JH/IjjIr+Dc0x67LtyM=\");\n\n_c3 = CheckboxFilter;\nCheckboxFilter.default = {\n  active: false\n};\nCheckboxFilter.propTypes = {\n  title: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  onChange: PropTypes.func,\n  slug: PropTypes.string.isRequired,\n  active: PropTypes.bool.isRequired,\n  titleSlug: PropTypes.string,\n  id: PropTypes.number,\n  activatedFilters: PropTypes.object,\n  refresh: PropTypes.number\n};\nexport default CheckboxFilter;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SmallCheckBox\");\n$RefreshReg$(_c3, \"CheckboxFilter\");","map":{"version":3,"sources":["/Users/bdeguigne/Documents/Game Bringer/src/components/Advanced Search/CheckboxFilter.js"],"names":["React","useState","useEffect","PropTypes","styled","Checkbox","FormControlLabel","advancedSearchPadding","appColors","isFiltersExist","Container","div","props","checked","secondaryDarker","SmallCheckBox","opacity","CheckboxFilter","setChecked","active","exclude","setExclude","title","label","id","toString","onChange","sendChange","data","results","type","slug","titleSlug","toLowerCase","handleChangeChecked","evt","state","target","remove","handleChangeExclude","isExist","activatedFilters","chip","refresh","default","propTypes","string","isRequired","func","bool","number","object"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react'\nimport PropTypes from 'prop-types';\nimport styled from 'styled-components';\nimport { Checkbox, FormControlLabel } from '@material-ui/core';\nimport { advancedSearchPadding, appColors } from '../../utils/styles';\nimport { isFiltersExist } from './filters';\n\nconst Container = styled.div`\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    height: 30px;\n    background: ${props => props.checked ? appColors.secondaryDarker : \"transparent\"};\n    padding: ${advancedSearchPadding};\n    transition: background 0.3s;\n`\n\nconst SmallCheckBox = styled(Checkbox)`\n    opacity: ${props => props.opacity ? props.opacity : 1};\n`\n\nfunction CheckboxFilter(props) {\n    // const [isActiveByUrl] = useState(props.active)\n    const [checked, setChecked] = useState(props.active)\n    const [exclude, setExclude] = useState(false)\n\n    let title = props.title;\n    let label = props.label;\n    let id = props.id.toString();\n    let onChange = props.onChange;\n\n    const sendChange = (data) => {\n        let results = {\n            title,\n            type: \"checkbox\",\n            slug: props.titleSlug || title.toLowerCase(),\n            data: data\n        }\n\n        if (onChange) {\n            onChange(results)\n        }\n    }\n\n    const handleChangeChecked = (evt) => {\n        let state = evt.target.checked;\n\n        setChecked(state);\n\n        if (checked === true && state === false) {\n            sendChange({\n                label,\n                slug: id,\n                checked: false,\n                remove: true,\n                exclude\n            })\n        } else {\n            sendChange({\n                label,\n                slug: id,\n                checked: true,\n                exclude\n            })\n        }\n\n        if (exclude === true) {\n            setExclude(false);\n        }\n    }\n\n    const handleChangeExclude = (evt) => {\n        let state = evt.target.checked;\n        setExclude(state);\n        if (checked === true) {\n            setChecked(false);\n\n        }\n    }\n\n    useEffect(() => {\n        let isExist = isFiltersExist(props.activatedFilters.chip, props.titleSlug, props.label);\n        setChecked(isExist);\n    }, [props.refresh])\n\n    return (\n        <Container checked={checked || exclude}>\n            <FormControlLabel\n                control={\n                    <SmallCheckBox\n                        checked={checked}\n                        onChange={handleChangeChecked}\n                        name={props.label}\n                        color=\"primary\"\n                    />\n                }\n                label={props.label}\n            />\n            <SmallCheckBox\n                indeterminate\n                checked={exclude}\n                onChange={handleChangeExclude}\n                name={props.label}\n                color=\"secondary\"\n                opacity=\"0.5\"\n            />\n        </Container>\n    )\n}\n\nCheckboxFilter.default = {\n    active: false\n}\n\nCheckboxFilter.propTypes = {\n    title: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    onChange: PropTypes.func,\n    slug: PropTypes.string.isRequired,\n    active: PropTypes.bool.isRequired,\n    titleSlug: PropTypes.string,\n    id: PropTypes.number,\n    activatedFilters: PropTypes.object,\n    refresh: PropTypes.number\n}\n\nexport default CheckboxFilter\n\n"]},"metadata":{},"sourceType":"module"}