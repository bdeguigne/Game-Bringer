{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bdeguigne/Downloads/backup onedrive de mort/Game Bringer/src/components/ShowCarousel.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport PropTypes from 'prop-types';\nimport useWindowDimensions from \"../utils/useWindowDimensions\";\nimport { Carousel } from 'react-responsive-carousel';\nimport CarouselItem from \"./CarouselItem\";\nimport CarouselIndicator from \"./CarouselIndicator\";\nimport styled from 'styled-components';\nimport { appColors, ArrowIcon } from \"../utils/styles\";\nimport { withRouter } from \"react-router-dom\";\nconst Container = styled.div`\n    position: relative;\n    width: 100%;\n`;\n_c = Container;\nconst ArrowContainer = styled.div`\n  display: flex;\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 40px 32px;\n\n  @media only screen and (min-width: 768px) {\n    display: none;\n  }\n`;\n_c2 = ArrowContainer;\nconst RoundedArrowIconContainer = styled.div`\n  cursor: pointer;\n  background: ${appColors.backgroundColor};\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  padding: 12px 14px;\n  align-items: center;\n  margin-left: 4px;\n`;\n_c3 = RoundedArrowIconContainer;\nconst WhiteArrowIcon = styled(ArrowIcon)`\n  font-size: 1.0rem;\n  color: white;\n  margin-left: ${props => props.left ? \"0\" : \"4px\"};\n  margin-right: ${props => props.right ? \"0\" : \"4px\"};\n`;\n_c4 = WhiteArrowIcon;\n\nfunction ShowCarousel({\n  data,\n  loadingStatus,\n  history\n}) {\n  _s();\n\n  const [currentSlide, setCurrentSlide] = useState(0);\n  const {\n    width\n  } = useWindowDimensions();\n\n  const updateCurrentSlide = index => {\n    if (currentSlide !== index) {\n      setCurrentSlide(index);\n    }\n  };\n\n  const onClickItem = (id, title) => {\n    let urlTitle = title.split(' ').join('_');\n    history.push(\"/\" + id + \"/\" + urlTitle);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    children: [/*#__PURE__*/_jsxDEV(Carousel, {\n      centerMode: true,\n      infiniteLoop: true,\n      showThumbs: false,\n      interval: 5000,\n      autoPlay: width >= 768 ? data.length === 10 : false,\n      onChange: updateCurrentSlide,\n      centerSlidePercentage: width >= 768 ? 40 : 100,\n      onClickItem: updateCurrentSlide,\n      showStatus: false,\n      showArrows: false,\n      showIndicators: false,\n      emulateTouch: false,\n      swipeScrollTolerance: 125,\n      selectedItem: currentSlide,\n      children: data.length === 10 ? data.map((element, i) => {\n        return /*#__PURE__*/_jsxDEV(CarouselItem, {\n          id: element.id,\n          isSelected: currentSlide === i,\n          imageId: element.screenshotID,\n          title: element.game,\n          genres: element.genres,\n          rate: element.rating,\n          company: element.company,\n          videoId: element.videoID,\n          isLoading: false,\n          releaseDate: element.releaseDate,\n          screenshots: element.screenshots,\n          summary: element.summary,\n          onClick: onClickItem\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 28\n        }, this);\n      }) : Array.from({\n        length: 10\n      }, (item, index) => {\n        return /*#__PURE__*/_jsxDEV(CarouselItem, {\n          isSelected: currentSlide === index,\n          isLoading: true\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 36\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(ArrowContainer, {\n      children: [/*#__PURE__*/_jsxDEV(RoundedArrowIconContainer, {\n        onClick: () => updateCurrentSlide(currentSlide - 1),\n        children: /*#__PURE__*/_jsxDEV(WhiteArrowIcon, {\n          className: \"icon-arrow-left\",\n          left: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(RoundedArrowIconContainer, {\n        onClick: () => updateCurrentSlide(currentSlide + 1),\n        children: /*#__PURE__*/_jsxDEV(WhiteArrowIcon, {\n          className: \"icon-arrow-right\",\n          right: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(CarouselIndicator, {\n      itemCount: data.length,\n      onClick: index => updateCurrentSlide(index),\n      selectedIndex: currentSlide,\n      setSelectedIndex: updateCurrentSlide,\n      loadingStatus: data.length === 10 ? null : loadingStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 17\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ShowCarousel, \"OcnUTMwRqHwDYh89lbuiUtgpf0k=\", false, function () {\n  return [useWindowDimensions];\n});\n\n_c5 = ShowCarousel;\nShowCarousel.prototype = {\n  games: PropTypes.array.isRequired\n};\nexport default _c6 = withRouter(ShowCarousel);\n\nvar _c, _c2, _c3, _c4, _c5, _c6;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"ArrowContainer\");\n$RefreshReg$(_c3, \"RoundedArrowIconContainer\");\n$RefreshReg$(_c4, \"WhiteArrowIcon\");\n$RefreshReg$(_c5, \"ShowCarousel\");\n$RefreshReg$(_c6, \"%default%\");","map":{"version":3,"sources":["/Users/bdeguigne/Downloads/backup onedrive de mort/Game Bringer/src/components/ShowCarousel.js"],"names":["React","useState","PropTypes","useWindowDimensions","Carousel","CarouselItem","CarouselIndicator","styled","appColors","ArrowIcon","withRouter","Container","div","ArrowContainer","RoundedArrowIconContainer","backgroundColor","WhiteArrowIcon","props","left","right","ShowCarousel","data","loadingStatus","history","currentSlide","setCurrentSlide","width","updateCurrentSlide","index","onClickItem","id","title","urlTitle","split","join","push","length","map","element","i","screenshotID","game","genres","rating","company","videoID","releaseDate","screenshots","summary","Array","from","item","prototype","games","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport \"react-responsive-carousel/lib/styles/carousel.min.css\";\nimport PropTypes from 'prop-types';\nimport useWindowDimensions from \"../utils/useWindowDimensions\";\nimport { Carousel } from 'react-responsive-carousel';\nimport CarouselItem from \"./CarouselItem\";\nimport CarouselIndicator from \"./CarouselIndicator\";\nimport styled from 'styled-components';\nimport {appColors, ArrowIcon} from \"../utils/styles\";\n\nimport {withRouter} from \"react-router-dom\"\n\nconst Container = styled.div`\n    position: relative;\n    width: 100%;\n`;\n\nconst ArrowContainer = styled.div`\n  display: flex;\n  position: absolute;\n  top: 0;\n  right: 0;\n  padding: 40px 32px;\n\n  @media only screen and (min-width: 768px) {\n    display: none;\n  }\n`\n\nconst RoundedArrowIconContainer = styled.div`\n  cursor: pointer;\n  background: ${appColors.backgroundColor};\n  border-radius: 50%;\n  display: flex;\n  justify-content: center;\n  padding: 12px 14px;\n  align-items: center;\n  margin-left: 4px;\n`\n\nconst WhiteArrowIcon = styled(ArrowIcon)`\n  font-size: 1.0rem;\n  color: white;\n  margin-left: ${props => props.left ? \"0\" : \"4px\"};\n  margin-right: ${props => props.right ? \"0\" : \"4px\"};\n`\n\nfunction ShowCarousel({ data, loadingStatus, history }) {\n    const [currentSlide, setCurrentSlide] = useState(0);\n    const {width} = useWindowDimensions();\n\n    const updateCurrentSlide = (index) => {\n        if (currentSlide !== index) {\n            setCurrentSlide(index);\n        }\n    }\n\n    const onClickItem = (id, title) => {\n        let urlTitle = title.split(' ').join('_');\n        history.push(\"/\" + id + \"/\" + urlTitle);\n    }\n\n    return (\n        <Container>\n            <Carousel\n                centerMode\n                infiniteLoop\n                showThumbs={false}\n                interval={5000}\n                autoPlay={width >= 768 ? data.length === 10 : false}\n                onChange={updateCurrentSlide}\n                centerSlidePercentage={width >= 768 ? 40 : 100}\n                onClickItem={updateCurrentSlide}\n                showStatus={false}\n                showArrows={false}\n                showIndicators={false}\n                emulateTouch={false}\n                swipeScrollTolerance={125}\n                selectedItem={currentSlide}\n            >\n                {data.length === 10 ? data.map((element, i) => {\n                    return <CarouselItem\n                        key={i}\n                        id={element.id}\n                        isSelected={currentSlide === i}\n                        imageId={element.screenshotID}\n                        title={element.game}\n                        genres={element.genres}\n                        rate={element.rating}\n                        company={element.company}\n                        videoId={element.videoID}\n                        isLoading={false}\n                        releaseDate={element.releaseDate}\n                        screenshots={element.screenshots}\n                        summary={element.summary}\n                        onClick={onClickItem}\n                    />\n                }) : (\n                        Array.from({ length: 10 }, (item, index) => {\n                            return <CarouselItem\n                                key={index}\n                                isSelected={currentSlide === index}\n                                isLoading={true}\n                            />\n                        }\n                        )\n                    )\n                }\n            </Carousel>\n            <ArrowContainer>\n                <RoundedArrowIconContainer onClick={() => updateCurrentSlide(currentSlide - 1)}>\n                    <WhiteArrowIcon className=\"icon-arrow-left\" left={true}/>\n                </RoundedArrowIconContainer>\n                <RoundedArrowIconContainer onClick={() => updateCurrentSlide(currentSlide + 1)}>\n                    <WhiteArrowIcon className=\"icon-arrow-right\" right={true}/>\n                </RoundedArrowIconContainer>\n            </ArrowContainer>\n                <CarouselIndicator\n                    itemCount={data.length}\n                    onClick={(index) => updateCurrentSlide(index)}\n                    selectedIndex={currentSlide}\n                    setSelectedIndex={updateCurrentSlide}\n                    loadingStatus={data.length === 10 ? null : loadingStatus}\n                />\n        </Container>\n    );\n}\n\nShowCarousel.prototype = {\n    games: PropTypes.array.isRequired\n}\n\nexport default withRouter(ShowCarousel);"]},"metadata":{},"sourceType":"module"}