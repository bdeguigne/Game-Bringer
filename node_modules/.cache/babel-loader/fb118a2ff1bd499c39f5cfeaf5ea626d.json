{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bdeguigne/Documents/Game Bringer/src/components/ImageLoader.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport { Skeleton } from \"@material-ui/lab\";\nimport { SkeletonColor } from \"../utils/styles\";\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`;\n_c = Container;\nconst SkeletonContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 4;\n  transition: opacity 0.5s;\n  opacity: ${props => props.hide ? 0 : 1};\n`;\n_c2 = SkeletonContainer;\nconst ScreenshotSkeleton = styled(Skeleton)`\n  background-color: ${SkeletonColor} !important;\n  width: 100% !important;\n  height: 100% !important;\n  border-radius: 32px;\n`; //Show a skeleton placeholder when the image is loading\n\n_c3 = ScreenshotSkeleton;\n\nconst ImageLoader = props => {\n  _s();\n\n  const [loaded, setLoaded] = useState(false);\n\n  const onLoad = () => {\n    setLoaded(true);\n\n    if (props.onLoad) {\n      props.onLoad();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    id: \"IMAGE-LOADER\",\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: props.src,\n      alt: \"Game screenshot\",\n      style: props.style,\n      className: props.className,\n      onLoad: onLoad\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(SkeletonContainer, {\n      hide: loaded,\n      children: /*#__PURE__*/_jsxDEV(ScreenshotSkeleton, {\n        variant: \"rect\",\n        animation: \"wave\",\n        style: props.style && {\n          borderRadius: props.style.borderRadius\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 9\n  }, this);\n};\n\n_s(ImageLoader, \"5HkI/FtSFoHY/ZszUPbNWJy51d0=\");\n\n_c4 = ImageLoader;\nImageLoader.propTypes = {\n  src: PropTypes.string,\n  style: PropTypes.object,\n  className: PropTypes.string,\n  onLoad: PropTypes.func\n};\nexport default ImageLoader;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Container\");\n$RefreshReg$(_c2, \"SkeletonContainer\");\n$RefreshReg$(_c3, \"ScreenshotSkeleton\");\n$RefreshReg$(_c4, \"ImageLoader\");","map":{"version":3,"sources":["/Users/bdeguigne/Documents/Game Bringer/src/components/ImageLoader.js"],"names":["React","useState","PropTypes","styled","Skeleton","SkeletonColor","Container","div","SkeletonContainer","props","hide","ScreenshotSkeleton","ImageLoader","loaded","setLoaded","onLoad","src","style","className","borderRadius","propTypes","string","object","func"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,aAAR,QAA4B,iBAA5B;AAEA,MAAMC,SAAS,GAAGH,MAAM,CAACI,GAAI;AAC7B;AACA;AACA,CAHA;KAAMD,S;AAKN,MAAME,iBAAiB,GAAGL,MAAM,CAACI,GAAI;AACrC;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAaE,KAAK,IAAIA,KAAK,CAACC,IAAN,GAAa,CAAb,GAAiB,CAAE;AACzC,CATA;MAAMF,iB;AAWN,MAAMG,kBAAkB,GAAGR,MAAM,CAACC,QAAD,CAAW;AAC5C,sBAAsBC,aAAc;AACpC;AACA;AACA;AACA,CALA,C,CAOA;;MAPMM,kB;;AAQN,MAAMC,WAAW,GAAGH,KAAK,IAAI;AAAA;;AACzB,QAAM,CAACI,MAAD,EAASC,SAAT,IAAsBb,QAAQ,CAAC,KAAD,CAApC;;AAGA,QAAMc,MAAM,GAAG,MAAM;AACjBD,IAAAA,SAAS,CAAC,IAAD,CAAT;;AACA,QAAIL,KAAK,CAACM,MAAV,EAAkB;AACdN,MAAAA,KAAK,CAACM,MAAN;AACH;AACJ,GALD;;AAOA,sBACI,QAAC,SAAD;AAAW,IAAA,EAAE,EAAE,cAAf;AAAA,4BACI;AAAK,MAAA,GAAG,EAAEN,KAAK,CAACO,GAAhB;AAAqB,MAAA,GAAG,EAAE,iBAA1B;AAA6C,MAAA,KAAK,EAAEP,KAAK,CAACQ,KAA1D;AAAiE,MAAA,SAAS,EAAER,KAAK,CAACS,SAAlF;AAA6F,MAAA,MAAM,EAAEH;AAArG;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI,QAAC,iBAAD;AAAmB,MAAA,IAAI,EAAEF,MAAzB;AAAA,6BACI,QAAC,kBAAD;AAAoB,QAAA,OAAO,EAAC,MAA5B;AAAmC,QAAA,SAAS,EAAE,MAA9C;AAAsD,QAAA,KAAK,EAAEJ,KAAK,CAACQ,KAAN,IAAe;AAACE,UAAAA,YAAY,EAAEV,KAAK,CAACQ,KAAN,CAAYE;AAA3B;AAA5E;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CAnBD;;GAAMP,W;;MAAAA,W;AAuBNA,WAAW,CAACQ,SAAZ,GAAwB;AACpBJ,EAAAA,GAAG,EAAEd,SAAS,CAACmB,MADK;AAEpBJ,EAAAA,KAAK,EAAEf,SAAS,CAACoB,MAFG;AAGpBJ,EAAAA,SAAS,EAAEhB,SAAS,CAACmB,MAHD;AAIpBN,EAAAA,MAAM,EAAEb,SAAS,CAACqB;AAJE,CAAxB;AAOA,eAAeX,WAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport styled from \"styled-components\";\nimport {Skeleton} from \"@material-ui/lab\";\nimport {SkeletonColor} from \"../utils/styles\";\n\nconst Container = styled.div`\n  width: 100%;\n  height: 100%;\n`\n\nconst SkeletonContainer = styled.div`\n  width: 100%;\n  height: 100%;\n  position: absolute;\n  top: 0;\n  right: 0;\n  z-index: 4;\n  transition: opacity 0.5s;\n  opacity: ${props => props.hide ? 0 : 1};\n`\n\nconst ScreenshotSkeleton = styled(Skeleton)`\n  background-color: ${SkeletonColor} !important;\n  width: 100% !important;\n  height: 100% !important;\n  border-radius: 32px;\n`\n\n//Show a skeleton placeholder when the image is loading\nconst ImageLoader = props => {\n    const [loaded, setLoaded] = useState(false);\n\n\n    const onLoad = () => {\n        setLoaded(true);\n        if (props.onLoad) {\n            props.onLoad();\n        }\n    }\n\n    return (\n        <Container id={\"IMAGE-LOADER\"}>\n            <img src={props.src} alt={\"Game screenshot\"} style={props.style} className={props.className} onLoad={onLoad}/>\n            <SkeletonContainer hide={loaded}>\n                <ScreenshotSkeleton variant=\"rect\" animation={\"wave\"} style={props.style && {borderRadius: props.style.borderRadius}}/>\n            </SkeletonContainer>\n        </Container>\n    );\n};\n\n\n\nImageLoader.propTypes = {\n    src: PropTypes.string,\n    style: PropTypes.object,\n    className: PropTypes.string,\n    onLoad: PropTypes.func,\n};\n\nexport default ImageLoader;\n"]},"metadata":{},"sourceType":"module"}