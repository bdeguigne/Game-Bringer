{"ast":null,"code":"/*!\n * Glide.js v3.4.1\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\n\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\n\nfunction toInt(value) {\n  return parseInt(value);\n}\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\n\n\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\n\n\nfunction isString(value) {\n  return typeof value === 'string';\n}\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\n\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\n\n\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\n\n\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\n\n\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\n\n\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n    return r[k], r;\n  }, {});\n}\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\n\n\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings); // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n\n\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      } // Create the event's object if not yet created\n\n\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      } // Add the handler to queue\n\n\n      var index = this.events[event].push(handler) - 1; // Provide handle back for removal of event\n\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      } // If the event doesn't exist, or there's no handlers in queue, just leave\n\n\n      if (!this.hop.call(this.events, event)) {\n        return;\n      } // Cycle through events queue, fire!\n\n\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide = function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: 'mutate',\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n\n      this._c.Move.make(distance);\n\n      return this;\n    }\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n      return this;\n    }\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n      return this;\n    }\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nfunction Run(Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n        this.move = move;\n        Events.emit('run.before', this.move);\n        this.calculate();\n        Events.emit('run', this.move);\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n          Glide.enable();\n        });\n      }\n    },\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n              Glide.index = 0;\n            }\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n              Glide.index = length;\n            }\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n\n        default:\n          warn('Invalid direction pattern [' + direction + steps + '] has been used');\n          break;\n      }\n    },\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length; // If the `bound` option is acitve, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n  return Run;\n}\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\n\n\nfunction now() {\n  return new Date().getTime();\n}\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\n\n\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps(Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n  return Gaps;\n}\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\n\n\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\n\n\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html(Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n  return Html;\n}\n\nfunction Peek(Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n  return Peek;\n}\n\nfunction Move(Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n      this.offset = offset;\n      Events.emit('move', {\n        movement: this.value\n      });\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n  return Move;\n}\n\nfunction Sizes(Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = this.slideWidth + 'px';\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n  return Sizes;\n}\n\nfunction Build(Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n      this.typeClass();\n      this.activeClass();\n      Events.emit('build.after');\n    },\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.activeSlide);\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    },\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n  return Build;\n}\n\nfunction Clones(Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes;\n      var peekIncrementer = +!!Glide.settings.peek;\n      var part = perView + peekIncrementer;\n      var start = slides.slice(0, part);\n      var end = slides.slice(-part);\n\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n        for (var i = 0; i < start.length; i++) {\n          var clone = start[i].cloneNode(true);\n          clone.classList.add(classes.cloneSlide);\n          items.push(clone);\n        }\n\n        for (var _i = 0; _i < end.length; _i++) {\n          var _clone = end[_i].cloneNode(true);\n\n          _clone.classList.add(classes.cloneSlide);\n\n          items.unshift(_clone);\n        }\n      }\n\n      return items;\n    },\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half, items.length);\n      var width = Components.Sizes.slideWidth + 'px';\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n  return Clones;\n}\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n    this.listeners = listeners;\n  }\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nfunction Resize(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction(Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n\n  Events.on('update', function () {\n    Direction.mount();\n  });\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n  return Direction;\n}\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Rtl(Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Gap(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n}\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Grow(Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Peeking(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction Focusing(Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\n\n\nfunction mutator(Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate(Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n        Translate.set(width * (length - 1));\n      });\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n        Translate.set(0);\n      });\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n  return Translate;\n}\n\nfunction Transition(Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n      this.set();\n    },\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n      this.set();\n    }\n  };\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n\n  Events.on('move', function () {\n    Transition.set();\n  });\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n\n  Events.on('run', function () {\n    Transition.enable();\n  });\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n  return Transition;\n}\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction Swipe(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n        var swipe = this.touches(event);\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n        Events.emit('swipe.start');\n      }\n    },\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n        var swipe = this.touches(event);\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n          Components.Move.make(subExSx * toFloat(touchRatio));\n          Components.Html.root.classList.add(classes.dragging);\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is positive and greater than threshold move backward.\n          if (settings.perTouch) {\n            steps = Math.min(steps, toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('<' + steps));\n        } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is negative and lower than negative threshold move forward.\n          if (settings.perTouch) {\n            steps = Math.max(steps, -toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('>' + steps));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n        Events.emit('swipe.end');\n      }\n    },\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n      Components.Transition.enable();\n      return this;\n    },\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n      Components.Transition.disable();\n      return this;\n    }\n  };\n  /**\n   * Add component class:\n   * - after initial building\n   */\n\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n  return Swipe;\n}\n\nfunction Images(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n  return Images;\n}\n\nfunction Anchors(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var detached = false;\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n\n  var prevented = false;\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n      this.bind();\n    },\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nfunction Controls(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var capture = supportsPassive$1 ? {\n    passive: true\n  } : false;\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n      this.addBindings();\n    },\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.add(settings.classes.activeNav);\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.activeNav);\n        });\n      }\n    },\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.activeNav);\n      }\n    },\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n  return Controls;\n}\n\nfunction Keyboard(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Keyboard;\n}\n\nfunction Autoplay(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n  return Autoplay;\n}\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\n\n\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nfunction Breakpoints(Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n\n  var settings = Glide.settings;\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n\n  var points = sortBreakpoints(settings.breakpoints);\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n\n  _extends(settings, Breakpoints.match(points));\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n\n\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n    defaults = _extends({}, settings);\n  });\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide$1 = function (_Core) {\n  inherits(Glide$$1, _Core);\n\n  function Glide$$1() {\n    classCallCheck(this, Glide$$1);\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n  }\n\n  createClass(Glide$$1, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide$$1;\n}(Glide);\n\nexport default Glide$1;","map":{"version":3,"sources":["/Users/bdeguigne/Downloads/backup onedrive de mort/Game Bringer/node_modules/@glidejs/glide/dist/glide.esm.js"],"names":["defaults","type","startAt","perView","focusAt","gap","autoplay","hoverpause","keyboard","bound","swipeThreshold","dragThreshold","perTouch","touchRatio","touchAngle","animationDuration","rewind","rewindDuration","animationTimingFunc","throttle","direction","peek","breakpoints","classes","ltr","rtl","slider","carousel","swipeable","dragging","cloneSlide","activeNav","activeSlide","disabledArrow","warn","msg","console","error","_typeof","Symbol","iterator","obj","constructor","prototype","classCallCheck","instance","Constructor","TypeError","createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","Object","defineProperty","key","protoProps","staticProps","_extends","assign","arguments","source","hasOwnProperty","call","get","object","property","receiver","Function","desc","getOwnPropertyDescriptor","undefined","parent","getPrototypeOf","value","getter","inherits","subClass","superClass","create","setPrototypeOf","__proto__","possibleConstructorReturn","self","ReferenceError","toInt","parseInt","toFloat","parseFloat","isString","isObject","isNumber","isFunction","isUndefined","isArray","Array","mount","glide","extensions","events","components","name","_name","define","prop","definition","sortKeys","keys","sort","reduce","r","k","mergeOptions","settings","options","EventsBus","hop","on","event","handler","index","push","remove","emit","context","forEach","item","Glide","selector","_c","_t","_e","disabled","mount$$1","mutate","transformers","update","go","pattern","Run","make","move","distance","Transition","disable","Move","destroy","play","interval","pause","enable","isType","get$$1","_o","set","set$$1","o","_i","_d","status","Components","Events","_this","calculate","after","isStart","isEnd","isOffset","steps","countableSteps","Math","min","_m","step","substr","Html","slides","now","Date","getTime","func","wait","timeout","args","result","previous","later","leading","apply","throttled","at","remaining","clearTimeout","trailing","setTimeout","cancel","MARGIN_TYPE","Gaps","len","style","Direction","marginLeft","marginRight","Sizes","wrapper","children","siblings","node","parentNode","n","firstChild","matched","nextSibling","nodeType","exist","window","HTMLElement","TRACK_SELECTOR","root","track","querySelector","slice","filter","slide","classList","contains","_r","document","t","Peek","_v","before","offset","movement","slideWidth","translate","is","setupSlides","width","setupWrapper","dimention","wrapperSize","offsetWidth","grow","Clones","reductor","Build","typeClass","activeClass","add","sibling","removeClasses","items","collect","_Glide$settings","peekIncrementer","part","start","end","max","floor","clone","cloneNode","_clone","unshift","append","_Components$Html","half","prepend","reverse","appendChild","_i2","insertBefore","_i3","removeChild","EventsBinder","listeners","el","closure","capture","addEventListener","off","removeEventListener","Resize","Binder","bind","unbind","VALID_DIRECTIONS","FLIPED_MOVEMENTS","resolve","token","split","join","addClass","removeClass","indexOf","Rtl","modify","Gap","Grow","Peeking","Focusing","mutator","TRANSFORMERS","concat","transformer","Translate","transform","compose","duration","transition","callback","supportsPassive","opts","e","supportsPassive$1","START_EVENTS","MOVE_EVENTS","END_EVENTS","MOUSE_EVENTS","Swipe","swipeSin","swipeStartX","swipeStartY","passive","bindSwipeStart","swipe","touches","pageX","pageY","bindSwipeMove","bindSwipeEnd","subExSx","subEySy","powEX","abs","powEY","swipeHypotenuse","sqrt","swipeCathetus","asin","PI","stopPropagation","threshold","swipeDistance","swipeDeg","round","unbindSwipeMove","unbindSwipeEnd","unbindSwipeStart","_this2","_this3","changedTouches","Images","dragstart","preventDefault","Anchors","detached","prevented","_a","querySelectorAll","click","detach","draggable","setAttribute","getAttribute","removeAttribute","attach","NAV_SELECTOR","CONTROLS_SELECTOR","Controls","_n","addBindings","setActive","removeActive","controls","removeBindings","elements","currentTarget","Keyboard","press","keyCode","Autoplay","setInterval","stop","time","clearInterval","sortBreakpoints","points","Breakpoints","match","matchMedia","point","matches","COMPONENTS","Glide$1","_Core","Glide$$1"],"mappings":"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","sourcesContent":["/*!\n * Glide.js v3.4.1\n * (c) 2013-2019 Jędrzej Chałubek <jedrzej.chalubek@gmail.com> (http://jedrzejchalubek.com/)\n * Released under the MIT License.\n */\n\nvar defaults = {\n  /**\n   * Type of the movement.\n   *\n   * Available types:\n   * `slider` - Rewinds slider to the start/end when it reaches the first or last slide.\n   * `carousel` - Changes slides without starting over when it reaches the first or last slide.\n   *\n   * @type {String}\n   */\n  type: 'slider',\n\n  /**\n   * Start at specific slide number defined with zero-based index.\n   *\n   * @type {Number}\n   */\n  startAt: 0,\n\n  /**\n   * A number of slides visible on the single viewport.\n   *\n   * @type {Number}\n   */\n  perView: 1,\n\n  /**\n   * Focus currently active slide at a specified position in the track.\n   *\n   * Available inputs:\n   * `center` - Current slide will be always focused at the center of a track.\n   * `0,1,2,3...` - Current slide will be focused on the specified zero-based index.\n   *\n   * @type {String|Number}\n   */\n  focusAt: 0,\n\n  /**\n   * A size of the gap added between slides.\n   *\n   * @type {Number}\n   */\n  gap: 10,\n\n  /**\n   * Change slides after a specified interval. Use `false` for turning off autoplay.\n   *\n   * @type {Number|Boolean}\n   */\n  autoplay: false,\n\n  /**\n   * Stop autoplay on mouseover event.\n   *\n   * @type {Boolean}\n   */\n  hoverpause: true,\n\n  /**\n   * Allow for changing slides with left and right keyboard arrows.\n   *\n   * @type {Boolean}\n   */\n  keyboard: true,\n\n  /**\n   * Stop running `perView` number of slides from the end. Use this\n   * option if you don't want to have an empty space after\n   * a slider. Works only with `slider` type and a\n   * non-centered `focusAt` setting.\n   *\n   * @type {Boolean}\n   */\n  bound: false,\n\n  /**\n   * Minimal swipe distance needed to change the slide. Use `false` for turning off a swiping.\n   *\n   * @type {Number|Boolean}\n   */\n  swipeThreshold: 80,\n\n  /**\n   * Minimal mouse drag distance needed to change the slide. Use `false` for turning off a dragging.\n   *\n   * @type {Number|Boolean}\n   */\n  dragThreshold: 120,\n\n  /**\n   * A maximum number of slides to which movement will be made on swiping or dragging. Use `false` for unlimited.\n   *\n   * @type {Number|Boolean}\n   */\n  perTouch: false,\n\n  /**\n   * Moving distance ratio of the slides on a swiping and dragging.\n   *\n   * @type {Number}\n   */\n  touchRatio: 0.5,\n\n  /**\n   * Angle required to activate slides moving on swiping or dragging.\n   *\n   * @type {Number}\n   */\n  touchAngle: 45,\n\n  /**\n   * Duration of the animation in milliseconds.\n   *\n   * @type {Number}\n   */\n  animationDuration: 400,\n\n  /**\n   * Allows looping the `slider` type. Slider will rewind to the first/last slide when it's at the start/end.\n   *\n   * @type {Boolean}\n   */\n  rewind: true,\n\n  /**\n   * Duration of the rewinding animation of the `slider` type in milliseconds.\n   *\n   * @type {Number}\n   */\n  rewindDuration: 800,\n\n  /**\n   * Easing function for the animation.\n   *\n   * @type {String}\n   */\n  animationTimingFunc: 'cubic-bezier(.165, .840, .440, 1)',\n\n  /**\n   * Throttle costly events at most once per every wait milliseconds.\n   *\n   * @type {Number}\n   */\n  throttle: 10,\n\n  /**\n   * Moving direction mode.\n   *\n   * Available inputs:\n   * - 'ltr' - left to right movement,\n   * - 'rtl' - right to left movement.\n   *\n   * @type {String}\n   */\n  direction: 'ltr',\n\n  /**\n   * The distance value of the next and previous viewports which\n   * have to peek in the current view. Accepts number and\n   * pixels as a string. Left and right peeking can be\n   * set up separately with a directions object.\n   *\n   * For example:\n   * `100` - Peek 100px on the both sides.\n   * { before: 100, after: 50 }` - Peek 100px on the left side and 50px on the right side.\n   *\n   * @type {Number|String|Object}\n   */\n  peek: 0,\n\n  /**\n   * Collection of options applied at specified media breakpoints.\n   * For example: display two slides per view under 800px.\n   * `{\n   *   '800px': {\n   *     perView: 2\n   *   }\n   * }`\n   */\n  breakpoints: {},\n\n  /**\n   * Collection of internally used HTML classes.\n   *\n   * @todo Refactor `slider` and `carousel` properties to single `type: { slider: '', carousel: '' }` object\n   * @type {Object}\n   */\n  classes: {\n    direction: {\n      ltr: 'glide--ltr',\n      rtl: 'glide--rtl'\n    },\n    slider: 'glide--slider',\n    carousel: 'glide--carousel',\n    swipeable: 'glide--swipeable',\n    dragging: 'glide--dragging',\n    cloneSlide: 'glide__slide--clone',\n    activeNav: 'glide__bullet--active',\n    activeSlide: 'glide__slide--active',\n    disabledArrow: 'glide__arrow--disabled'\n  }\n};\n\n/**\n * Outputs warning message to the bowser console.\n *\n * @param  {String} msg\n * @return {Void}\n */\nfunction warn(msg) {\n  console.error(\"[Glide warn]: \" + msg);\n}\n\nvar _typeof = typeof Symbol === \"function\" && typeof Symbol.iterator === \"symbol\" ? function (obj) {\n  return typeof obj;\n} : function (obj) {\n  return obj && typeof Symbol === \"function\" && obj.constructor === Symbol && obj !== Symbol.prototype ? \"symbol\" : typeof obj;\n};\n\nvar classCallCheck = function (instance, Constructor) {\n  if (!(instance instanceof Constructor)) {\n    throw new TypeError(\"Cannot call a class as a function\");\n  }\n};\n\nvar createClass = function () {\n  function defineProperties(target, props) {\n    for (var i = 0; i < props.length; i++) {\n      var descriptor = props[i];\n      descriptor.enumerable = descriptor.enumerable || false;\n      descriptor.configurable = true;\n      if (\"value\" in descriptor) descriptor.writable = true;\n      Object.defineProperty(target, descriptor.key, descriptor);\n    }\n  }\n\n  return function (Constructor, protoProps, staticProps) {\n    if (protoProps) defineProperties(Constructor.prototype, protoProps);\n    if (staticProps) defineProperties(Constructor, staticProps);\n    return Constructor;\n  };\n}();\n\nvar _extends = Object.assign || function (target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i];\n\n    for (var key in source) {\n      if (Object.prototype.hasOwnProperty.call(source, key)) {\n        target[key] = source[key];\n      }\n    }\n  }\n\n  return target;\n};\n\nvar get = function get(object, property, receiver) {\n  if (object === null) object = Function.prototype;\n  var desc = Object.getOwnPropertyDescriptor(object, property);\n\n  if (desc === undefined) {\n    var parent = Object.getPrototypeOf(object);\n\n    if (parent === null) {\n      return undefined;\n    } else {\n      return get(parent, property, receiver);\n    }\n  } else if (\"value\" in desc) {\n    return desc.value;\n  } else {\n    var getter = desc.get;\n\n    if (getter === undefined) {\n      return undefined;\n    }\n\n    return getter.call(receiver);\n  }\n};\n\nvar inherits = function (subClass, superClass) {\n  if (typeof superClass !== \"function\" && superClass !== null) {\n    throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass);\n  }\n\n  subClass.prototype = Object.create(superClass && superClass.prototype, {\n    constructor: {\n      value: subClass,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n  if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass;\n};\n\nvar possibleConstructorReturn = function (self, call) {\n  if (!self) {\n    throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");\n  }\n\n  return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self;\n};\n\n/**\n * Converts value entered as number\n * or string to integer value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toInt(value) {\n  return parseInt(value);\n}\n\n/**\n * Converts value entered as number\n * or string to flat value.\n *\n * @param {String} value\n * @returns {Number}\n */\nfunction toFloat(value) {\n  return parseFloat(value);\n}\n\n/**\n * Indicates whether the specified value is a string.\n *\n * @param  {*}   value\n * @return {Boolean}\n */\nfunction isString(value) {\n  return typeof value === 'string';\n}\n\n/**\n * Indicates whether the specified value is an object.\n *\n * @param  {*} value\n * @return {Boolean}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction isObject(value) {\n  var type = typeof value === 'undefined' ? 'undefined' : _typeof(value);\n\n  return type === 'function' || type === 'object' && !!value; // eslint-disable-line no-mixed-operators\n}\n\n/**\n * Indicates whether the specified value is a number.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isNumber(value) {\n  return typeof value === 'number';\n}\n\n/**\n * Indicates whether the specified value is a function.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isFunction(value) {\n  return typeof value === 'function';\n}\n\n/**\n * Indicates whether the specified value is undefined.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isUndefined(value) {\n  return typeof value === 'undefined';\n}\n\n/**\n * Indicates whether the specified value is an array.\n *\n * @param  {*} value\n * @return {Boolean}\n */\nfunction isArray(value) {\n  return value.constructor === Array;\n}\n\n/**\n * Creates and initializes specified collection of extensions.\n * Each extension receives access to instance of glide and rest of components.\n *\n * @param {Object} glide\n * @param {Object} extensions\n *\n * @returns {Object}\n */\nfunction mount(glide, extensions, events) {\n  var components = {};\n\n  for (var name in extensions) {\n    if (isFunction(extensions[name])) {\n      components[name] = extensions[name](glide, components, events);\n    } else {\n      warn('Extension must be a function');\n    }\n  }\n\n  for (var _name in components) {\n    if (isFunction(components[_name].mount)) {\n      components[_name].mount();\n    }\n  }\n\n  return components;\n}\n\n/**\n * Defines getter and setter property on the specified object.\n *\n * @param  {Object} obj         Object where property has to be defined.\n * @param  {String} prop        Name of the defined property.\n * @param  {Object} definition  Get and set definitions for the property.\n * @return {Void}\n */\nfunction define(obj, prop, definition) {\n  Object.defineProperty(obj, prop, definition);\n}\n\n/**\n * Sorts aphabetically object keys.\n *\n * @param  {Object} obj\n * @return {Object}\n */\nfunction sortKeys(obj) {\n  return Object.keys(obj).sort().reduce(function (r, k) {\n    r[k] = obj[k];\n\n    return r[k], r;\n  }, {});\n}\n\n/**\n * Merges passed settings object with default options.\n *\n * @param  {Object} defaults\n * @param  {Object} settings\n * @return {Object}\n */\nfunction mergeOptions(defaults, settings) {\n  var options = _extends({}, defaults, settings);\n\n  // `Object.assign` do not deeply merge objects, so we\n  // have to do it manually for every nested object\n  // in options. Although it does not look smart,\n  // it's smaller and faster than some fancy\n  // merging deep-merge algorithm script.\n  if (settings.hasOwnProperty('classes')) {\n    options.classes = _extends({}, defaults.classes, settings.classes);\n\n    if (settings.classes.hasOwnProperty('direction')) {\n      options.classes.direction = _extends({}, defaults.classes.direction, settings.classes.direction);\n    }\n  }\n\n  if (settings.hasOwnProperty('breakpoints')) {\n    options.breakpoints = _extends({}, defaults.breakpoints, settings.breakpoints);\n  }\n\n  return options;\n}\n\nvar EventsBus = function () {\n  /**\n   * Construct a EventBus instance.\n   *\n   * @param {Object} events\n   */\n  function EventsBus() {\n    var events = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBus);\n\n    this.events = events;\n    this.hop = events.hasOwnProperty;\n  }\n\n  /**\n   * Adds listener to the specifed event.\n   *\n   * @param {String|Array} event\n   * @param {Function} handler\n   */\n\n\n  createClass(EventsBus, [{\n    key: 'on',\n    value: function on(event, handler) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.on(event[i], handler);\n        }\n      }\n\n      // Create the event's object if not yet created\n      if (!this.hop.call(this.events, event)) {\n        this.events[event] = [];\n      }\n\n      // Add the handler to queue\n      var index = this.events[event].push(handler) - 1;\n\n      // Provide handle back for removal of event\n      return {\n        remove: function remove() {\n          delete this.events[event][index];\n        }\n      };\n    }\n\n    /**\n     * Runs registered handlers for specified event.\n     *\n     * @param {String|Array} event\n     * @param {Object=} context\n     */\n\n  }, {\n    key: 'emit',\n    value: function emit(event, context) {\n      if (isArray(event)) {\n        for (var i = 0; i < event.length; i++) {\n          this.emit(event[i], context);\n        }\n      }\n\n      // If the event doesn't exist, or there's no handlers in queue, just leave\n      if (!this.hop.call(this.events, event)) {\n        return;\n      }\n\n      // Cycle through events queue, fire!\n      this.events[event].forEach(function (item) {\n        item(context || {});\n      });\n    }\n  }]);\n  return EventsBus;\n}();\n\nvar Glide = function () {\n  /**\r\n   * Construct glide.\r\n   *\r\n   * @param  {String} selector\r\n   * @param  {Object} options\r\n   */\n  function Glide(selector) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    classCallCheck(this, Glide);\n\n    this._c = {};\n    this._t = [];\n    this._e = new EventsBus();\n\n    this.disabled = false;\n    this.selector = selector;\n    this.settings = mergeOptions(defaults, options);\n    this.index = this.settings.startAt;\n  }\n\n  /**\r\n   * Initializes glide.\r\n   *\r\n   * @param {Object} extensions Collection of extensions to initialize.\r\n   * @return {Glide}\r\n   */\n\n\n  createClass(Glide, [{\n    key: 'mount',\n    value: function mount$$1() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this._e.emit('mount.before');\n\n      if (isObject(extensions)) {\n        this._c = mount(this, extensions, this._e);\n      } else {\n        warn('You need to provide a object on `mount()`');\n      }\n\n      this._e.emit('mount.after');\n\n      return this;\n    }\n\n    /**\r\n     * Collects an instance `translate` transformers.\r\n     *\r\n     * @param  {Array} transformers Collection of transformers.\r\n     * @return {Void}\r\n     */\n\n  }, {\n    key: 'mutate',\n    value: function mutate() {\n      var transformers = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n      if (isArray(transformers)) {\n        this._t = transformers;\n      } else {\n        warn('You need to provide a array on `mutate()`');\n      }\n\n      return this;\n    }\n\n    /**\r\n     * Updates glide with specified settings.\r\n     *\r\n     * @param {Object} settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'update',\n    value: function update() {\n      var settings = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      this.settings = mergeOptions(this.settings, settings);\n\n      if (settings.hasOwnProperty('startAt')) {\n        this.index = settings.startAt;\n      }\n\n      this._e.emit('update');\n\n      return this;\n    }\n\n    /**\r\n     * Change slide with specified pattern. A pattern must be in the special format:\r\n     * `>` - Move one forward\r\n     * `<` - Move one backward\r\n     * `={i}` - Go to {i} zero-based slide (eq. '=1', will go to second slide)\r\n     * `>>` - Rewinds to end (last slide)\r\n     * `<<` - Rewinds to start (first slide)\r\n     *\r\n     * @param {String} pattern\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'go',\n    value: function go(pattern) {\n      this._c.Run.make(pattern);\n\n      return this;\n    }\n\n    /**\r\n     * Move track by specified distance.\r\n     *\r\n     * @param {String} distance\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'move',\n    value: function move(distance) {\n      this._c.Transition.disable();\n      this._c.Move.make(distance);\n\n      return this;\n    }\n\n    /**\r\n     * Destroy instance and revert all changes done by this._c.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      this._e.emit('destroy');\n\n      return this;\n    }\n\n    /**\r\n     * Start instance autoplaying.\r\n     *\r\n     * @param {Boolean|Number} interval Run autoplaying with passed interval regardless of `autoplay` settings\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'play',\n    value: function play() {\n      var interval = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : false;\n\n      if (interval) {\n        this.settings.autoplay = interval;\n      }\n\n      this._e.emit('play');\n\n      return this;\n    }\n\n    /**\r\n     * Stop instance autoplaying.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'pause',\n    value: function pause() {\n      this._e.emit('pause');\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a idle status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'disable',\n    value: function disable() {\n      this.disabled = true;\n\n      return this;\n    }\n\n    /**\r\n     * Sets glide into a active status.\r\n     *\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'enable',\n    value: function enable() {\n      this.disabled = false;\n\n      return this;\n    }\n\n    /**\r\n     * Adds cuutom event listener with handler.\r\n     *\r\n     * @param  {String|Array} event\r\n     * @param  {Function} handler\r\n     * @return {Glide}\r\n     */\n\n  }, {\n    key: 'on',\n    value: function on(event, handler) {\n      this._e.on(event, handler);\n\n      return this;\n    }\n\n    /**\r\n     * Checks if glide is a precised type.\r\n     *\r\n     * @param  {String} name\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'isType',\n    value: function isType(name) {\n      return this.settings.type === name;\n    }\n\n    /**\r\n     * Gets value of the core options.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'settings',\n    get: function get$$1() {\n      return this._o;\n    }\n\n    /**\r\n     * Sets value of the core options.\r\n     *\r\n     * @param  {Object} o\r\n     * @return {Void}\r\n     */\n    ,\n    set: function set$$1(o) {\n      if (isObject(o)) {\n        this._o = o;\n      } else {\n        warn('Options must be an `object` instance.');\n      }\n    }\n\n    /**\r\n     * Gets current index of the slider.\r\n     *\r\n     * @return {Object}\r\n     */\n\n  }, {\n    key: 'index',\n    get: function get$$1() {\n      return this._i;\n    }\n\n    /**\r\n     * Sets current index a slider.\r\n     *\r\n     * @return {Object}\r\n     */\n    ,\n    set: function set$$1(i) {\n      this._i = toInt(i);\n    }\n\n    /**\r\n     * Gets type name of the slider.\r\n     *\r\n     * @return {String}\r\n     */\n\n  }, {\n    key: 'type',\n    get: function get$$1() {\n      return this.settings.type;\n    }\n\n    /**\r\n     * Gets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n\n  }, {\n    key: 'disabled',\n    get: function get$$1() {\n      return this._d;\n    }\n\n    /**\r\n     * Sets value of the idle status.\r\n     *\r\n     * @return {Boolean}\r\n     */\n    ,\n    set: function set$$1(status) {\n      this._d = !!status;\n    }\n  }]);\n  return Glide;\n}();\n\nfunction Run (Glide, Components, Events) {\n  var Run = {\n    /**\n     * Initializes autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this._o = false;\n    },\n\n\n    /**\n     * Makes glides running based on the passed moving schema.\n     *\n     * @param {String} move\n     */\n    make: function make(move) {\n      var _this = this;\n\n      if (!Glide.disabled) {\n        Glide.disable();\n\n        this.move = move;\n\n        Events.emit('run.before', this.move);\n\n        this.calculate();\n\n        Events.emit('run', this.move);\n\n        Components.Transition.after(function () {\n          if (_this.isStart()) {\n            Events.emit('run.start', _this.move);\n          }\n\n          if (_this.isEnd()) {\n            Events.emit('run.end', _this.move);\n          }\n\n          if (_this.isOffset('<') || _this.isOffset('>')) {\n            _this._o = false;\n\n            Events.emit('run.offset', _this.move);\n          }\n\n          Events.emit('run.after', _this.move);\n\n          Glide.enable();\n        });\n      }\n    },\n\n\n    /**\n     * Calculates current index based on defined move.\n     *\n     * @return {Void}\n     */\n    calculate: function calculate() {\n      var move = this.move,\n          length = this.length;\n      var steps = move.steps,\n          direction = move.direction;\n\n\n      var countableSteps = isNumber(toInt(steps)) && toInt(steps) !== 0;\n\n      switch (direction) {\n        case '>':\n          if (steps === '>') {\n            Glide.index = length;\n          } else if (this.isEnd()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = 0;\n            }\n          } else if (countableSteps) {\n            Glide.index += Math.min(length - Glide.index, -toInt(steps));\n          } else {\n            Glide.index++;\n          }\n          break;\n\n        case '<':\n          if (steps === '<') {\n            Glide.index = 0;\n          } else if (this.isStart()) {\n            if (!(Glide.isType('slider') && !Glide.settings.rewind)) {\n              this._o = true;\n\n              Glide.index = length;\n            }\n          } else if (countableSteps) {\n            Glide.index -= Math.min(Glide.index, toInt(steps));\n          } else {\n            Glide.index--;\n          }\n          break;\n\n        case '=':\n          Glide.index = steps;\n          break;\n\n        default:\n          warn('Invalid direction pattern [' + direction + steps + '] has been used');\n          break;\n      }\n    },\n\n\n    /**\n     * Checks if we are on the first slide.\n     *\n     * @return {Boolean}\n     */\n    isStart: function isStart() {\n      return Glide.index === 0;\n    },\n\n\n    /**\n     * Checks if we are on the last slide.\n     *\n     * @return {Boolean}\n     */\n    isEnd: function isEnd() {\n      return Glide.index === this.length;\n    },\n\n\n    /**\n     * Checks if we are making a offset run.\n     *\n     * @param {String} direction\n     * @return {Boolean}\n     */\n    isOffset: function isOffset(direction) {\n      return this._o && this.move.direction === direction;\n    }\n  };\n\n  define(Run, 'move', {\n    /**\n     * Gets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    get: function get() {\n      return this._m;\n    },\n\n\n    /**\n     * Sets value of the move schema.\n     *\n     * @returns {Object}\n     */\n    set: function set(value) {\n      var step = value.substr(1);\n\n      this._m = {\n        direction: value.substr(0, 1),\n        steps: step ? toInt(step) ? toInt(step) : step : 0\n      };\n    }\n  });\n\n  define(Run, 'length', {\n    /**\n     * Gets value of the running distance based\n     * on zero-indexing number of slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n      var length = Components.Html.slides.length;\n\n      // If the `bound` option is acitve, a maximum running distance should be\n      // reduced by `perView` and `focusAt` settings. Running distance\n      // should end before creating an empty space after instance.\n\n      if (Glide.isType('slider') && settings.focusAt !== 'center' && settings.bound) {\n        return length - 1 - (toInt(settings.perView) - 1) + toInt(settings.focusAt);\n      }\n\n      return length - 1;\n    }\n  });\n\n  define(Run, 'offset', {\n    /**\n     * Gets status of the offsetting flag.\n     *\n     * @return {Boolean}\n     */\n    get: function get() {\n      return this._o;\n    }\n  });\n\n  return Run;\n}\n\n/**\n * Returns a current time.\n *\n * @return {Number}\n */\nfunction now() {\n  return new Date().getTime();\n}\n\n/**\n * Returns a function, that, when invoked, will only be triggered\n * at most once during a given window of time.\n *\n * @param {Function} func\n * @param {Number} wait\n * @param {Object=} options\n * @return {Function}\n *\n * @see https://github.com/jashkenas/underscore\n */\nfunction throttle(func, wait, options) {\n  var timeout = void 0,\n      context = void 0,\n      args = void 0,\n      result = void 0;\n  var previous = 0;\n  if (!options) options = {};\n\n  var later = function later() {\n    previous = options.leading === false ? 0 : now();\n    timeout = null;\n    result = func.apply(context, args);\n    if (!timeout) context = args = null;\n  };\n\n  var throttled = function throttled() {\n    var at = now();\n    if (!previous && options.leading === false) previous = at;\n    var remaining = wait - (at - previous);\n    context = this;\n    args = arguments;\n    if (remaining <= 0 || remaining > wait) {\n      if (timeout) {\n        clearTimeout(timeout);\n        timeout = null;\n      }\n      previous = at;\n      result = func.apply(context, args);\n      if (!timeout) context = args = null;\n    } else if (!timeout && options.trailing !== false) {\n      timeout = setTimeout(later, remaining);\n    }\n    return result;\n  };\n\n  throttled.cancel = function () {\n    clearTimeout(timeout);\n    previous = 0;\n    timeout = context = args = null;\n  };\n\n  return throttled;\n}\n\nvar MARGIN_TYPE = {\n  ltr: ['marginLeft', 'marginRight'],\n  rtl: ['marginRight', 'marginLeft']\n};\n\nfunction Gaps (Glide, Components, Events) {\n  var Gaps = {\n    /**\n     * Applies gaps between slides. First and last\n     * slides do not receive it's edge margins.\n     *\n     * @param {HTMLCollection} slides\n     * @return {Void}\n     */\n    apply: function apply(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n        var direction = Components.Direction.value;\n\n        if (i !== 0) {\n          style[MARGIN_TYPE[direction][0]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][0]] = '';\n        }\n\n        if (i !== slides.length - 1) {\n          style[MARGIN_TYPE[direction][1]] = this.value / 2 + 'px';\n        } else {\n          style[MARGIN_TYPE[direction][1]] = '';\n        }\n      }\n    },\n\n\n    /**\n     * Removes gaps from the slides.\n     *\n     * @param {HTMLCollection} slides\n     * @returns {Void}\n    */\n    remove: function remove(slides) {\n      for (var i = 0, len = slides.length; i < len; i++) {\n        var style = slides[i].style;\n\n        style.marginLeft = '';\n        style.marginRight = '';\n      }\n    }\n  };\n\n  define(Gaps, 'value', {\n    /**\n     * Gets value of the gap.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return toInt(Glide.settings.gap);\n    }\n  });\n\n  define(Gaps, 'grow', {\n    /**\n     * Gets additional dimentions value caused by gaps.\n     * Used to increase width of the slides wrapper.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Gaps.value * (Components.Sizes.length - 1);\n    }\n  });\n\n  define(Gaps, 'reductor', {\n    /**\n     * Gets reduction value caused by gaps.\n     * Used to subtract width of the slides.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var perView = Glide.settings.perView;\n\n      return Gaps.value * (perView - 1) / perView;\n    }\n  });\n\n  /**\n   * Apply calculated gaps:\n   * - after building, so slides (including clones) will receive proper margins\n   * - on updating via API, to recalculate gaps with new options\n   */\n  Events.on(['build.after', 'update'], throttle(function () {\n    Gaps.apply(Components.Html.wrapper.children);\n  }, 30));\n\n  /**\n   * Remove gaps:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Gaps.remove(Components.Html.wrapper.children);\n  });\n\n  return Gaps;\n}\n\n/**\n * Finds siblings nodes of the passed node.\n *\n * @param  {Element} node\n * @return {Array}\n */\nfunction siblings(node) {\n  if (node && node.parentNode) {\n    var n = node.parentNode.firstChild;\n    var matched = [];\n\n    for (; n; n = n.nextSibling) {\n      if (n.nodeType === 1 && n !== node) {\n        matched.push(n);\n      }\n    }\n\n    return matched;\n  }\n\n  return [];\n}\n\n/**\n * Checks if passed node exist and is a valid element.\n *\n * @param  {Element} node\n * @return {Boolean}\n */\nfunction exist(node) {\n  if (node && node instanceof window.HTMLElement) {\n    return true;\n  }\n\n  return false;\n}\n\nvar TRACK_SELECTOR = '[data-glide-el=\"track\"]';\n\nfunction Html (Glide, Components) {\n  var Html = {\n    /**\n     * Setup slider HTML nodes.\n     *\n     * @param {Glide} glide\n     */\n    mount: function mount() {\n      this.root = Glide.selector;\n      this.track = this.root.querySelector(TRACK_SELECTOR);\n      this.slides = Array.prototype.slice.call(this.wrapper.children).filter(function (slide) {\n        return !slide.classList.contains(Glide.settings.classes.cloneSlide);\n      });\n    }\n  };\n\n  define(Html, 'root', {\n    /**\n     * Gets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._r;\n    },\n\n\n    /**\n     * Sets node of the glide main element.\n     *\n     * @return {Object}\n     */\n    set: function set(r) {\n      if (isString(r)) {\n        r = document.querySelector(r);\n      }\n\n      if (exist(r)) {\n        Html._r = r;\n      } else {\n        warn('Root element must be a existing Html node');\n      }\n    }\n  });\n\n  define(Html, 'track', {\n    /**\n     * Gets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html._t;\n    },\n\n\n    /**\n     * Sets node of the glide track with slides.\n     *\n     * @return {Object}\n     */\n    set: function set(t) {\n      if (exist(t)) {\n        Html._t = t;\n      } else {\n        warn('Could not find track element. Please use ' + TRACK_SELECTOR + ' attribute.');\n      }\n    }\n  });\n\n  define(Html, 'wrapper', {\n    /**\n     * Gets node of the slides wrapper.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Html.track.children[0];\n    }\n  });\n\n  return Html;\n}\n\nfunction Peek (Glide, Components, Events) {\n  var Peek = {\n    /**\n     * Setups how much to peek based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.peek;\n    }\n  };\n\n  define(Peek, 'value', {\n    /**\n     * Gets value of the peek.\n     *\n     * @returns {Number|Object}\n     */\n    get: function get() {\n      return Peek._v;\n    },\n\n\n    /**\n     * Sets value of the peek.\n     *\n     * @param {Number|Object} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (isObject(value)) {\n        value.before = toInt(value.before);\n        value.after = toInt(value.after);\n      } else {\n        value = toInt(value);\n      }\n\n      Peek._v = value;\n    }\n  });\n\n  define(Peek, 'reductor', {\n    /**\n     * Gets reduction value caused by peek.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      var value = Peek.value;\n      var perView = Glide.settings.perView;\n\n      if (isObject(value)) {\n        return value.before / perView + value.after / perView;\n      }\n\n      return value * 2 / perView;\n    }\n  });\n\n  /**\n   * Recalculate peeking sizes on:\n   * - when resizing window to update to proper percents\n   */\n  Events.on(['resize', 'update'], function () {\n    Peek.mount();\n  });\n\n  return Peek;\n}\n\nfunction Move (Glide, Components, Events) {\n  var Move = {\n    /**\n     * Constructs move component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      this._o = 0;\n    },\n\n\n    /**\n     * Calculates a movement value based on passed offset and currently active index.\n     *\n     * @param  {Number} offset\n     * @return {Void}\n     */\n    make: function make() {\n      var _this = this;\n\n      var offset = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 0;\n\n      this.offset = offset;\n\n      Events.emit('move', {\n        movement: this.value\n      });\n\n      Components.Transition.after(function () {\n        Events.emit('move.after', {\n          movement: _this.value\n        });\n      });\n    }\n  };\n\n  define(Move, 'offset', {\n    /**\n     * Gets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    get: function get() {\n      return Move._o;\n    },\n\n\n    /**\n     * Sets an offset value used to modify current translate.\n     *\n     * @return {Object}\n     */\n    set: function set(value) {\n      Move._o = !isUndefined(value) ? toInt(value) : 0;\n    }\n  });\n\n  define(Move, 'translate', {\n    /**\n     * Gets a raw movement value.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Sizes.slideWidth * Glide.index;\n    }\n  });\n\n  define(Move, 'value', {\n    /**\n     * Gets an actual movement value corrected by offset.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var offset = this.offset;\n      var translate = this.translate;\n\n      if (Components.Direction.is('rtl')) {\n        return translate + offset;\n      }\n\n      return translate - offset;\n    }\n  });\n\n  /**\n   * Make movement to proper slide on:\n   * - before build, so glide will start at `startAt` index\n   * - on each standard run to move to newly calculated index\n   */\n  Events.on(['build.before', 'run'], function () {\n    Move.make();\n  });\n\n  return Move;\n}\n\nfunction Sizes (Glide, Components, Events) {\n  var Sizes = {\n    /**\n     * Setups dimentions of slides.\n     *\n     * @return {Void}\n     */\n    setupSlides: function setupSlides() {\n      var width = this.slideWidth + 'px';\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = width;\n      }\n    },\n\n\n    /**\n     * Setups dimentions of slides wrapper.\n     *\n     * @return {Void}\n     */\n    setupWrapper: function setupWrapper(dimention) {\n      Components.Html.wrapper.style.width = this.wrapperSize + 'px';\n    },\n\n\n    /**\n     * Removes applied styles from HTML elements.\n     *\n     * @returns {Void}\n     */\n    remove: function remove() {\n      var slides = Components.Html.slides;\n\n      for (var i = 0; i < slides.length; i++) {\n        slides[i].style.width = '';\n      }\n\n      Components.Html.wrapper.style.width = '';\n    }\n  };\n\n  define(Sizes, 'length', {\n    /**\n     * Gets count number of the slides.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.slides.length;\n    }\n  });\n\n  define(Sizes, 'width', {\n    /**\n     * Gets width value of the glide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Components.Html.root.offsetWidth;\n    }\n  });\n\n  define(Sizes, 'wrapperSize', {\n    /**\n     * Gets size of the slides wrapper.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.slideWidth * Sizes.length + Components.Gaps.grow + Components.Clones.grow;\n    }\n  });\n\n  define(Sizes, 'slideWidth', {\n    /**\n     * Gets width value of the single slide.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return Sizes.width / Glide.settings.perView - Components.Peek.reductor - Components.Gaps.reductor;\n    }\n  });\n\n  /**\n   * Apply calculated glide's dimensions:\n   * - before building, so other dimentions (e.g. translate) will be calculated propertly\n   * - when resizing window to recalculate sildes dimensions\n   * - on updating via API, to calculate dimensions based on new options\n   */\n  Events.on(['build.before', 'resize', 'update'], function () {\n    Sizes.setupSlides();\n    Sizes.setupWrapper();\n  });\n\n  /**\n   * Remove calculated glide's dimensions:\n   * - on destoting to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Sizes.remove();\n  });\n\n  return Sizes;\n}\n\nfunction Build (Glide, Components, Events) {\n  var Build = {\n    /**\n     * Init glide building. Adds classes, sets\n     * dimensions and setups initial state.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      Events.emit('build.before');\n\n      this.typeClass();\n      this.activeClass();\n\n      Events.emit('build.after');\n    },\n\n\n    /**\n     * Adds `type` class to the glide element.\n     *\n     * @return {Void}\n     */\n    typeClass: function typeClass() {\n      Components.Html.root.classList.add(Glide.settings.classes[Glide.settings.type]);\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    activeClass: function activeClass() {\n      var classes = Glide.settings.classes;\n      var slide = Components.Html.slides[Glide.index];\n\n      if (slide) {\n        slide.classList.add(classes.activeSlide);\n\n        siblings(slide).forEach(function (sibling) {\n          sibling.classList.remove(classes.activeSlide);\n        });\n      }\n    },\n\n\n    /**\n     * Removes HTML classes applied at building.\n     *\n     * @return {Void}\n     */\n    removeClasses: function removeClasses() {\n      var classes = Glide.settings.classes;\n\n      Components.Html.root.classList.remove(classes[Glide.settings.type]);\n\n      Components.Html.slides.forEach(function (sibling) {\n        sibling.classList.remove(classes.activeSlide);\n      });\n    }\n  };\n\n  /**\n   * Clear building classes:\n   * - on destroying to bring HTML to its initial state\n   * - on updating to remove classes before remounting component\n   */\n  Events.on(['destroy', 'update'], function () {\n    Build.removeClasses();\n  });\n\n  /**\n   * Remount component:\n   * - on resizing of the window to calculate new dimentions\n   * - on updating settings via API\n   */\n  Events.on(['resize', 'update'], function () {\n    Build.mount();\n  });\n\n  /**\n   * Swap active class of current slide:\n   * - after each move to the new index\n   */\n  Events.on('move.after', function () {\n    Build.activeClass();\n  });\n\n  return Build;\n}\n\nfunction Clones (Glide, Components, Events) {\n  var Clones = {\n    /**\n     * Create pattern map and collect slides to be cloned.\n     */\n    mount: function mount() {\n      this.items = [];\n\n      if (Glide.isType('carousel')) {\n        this.items = this.collect();\n      }\n    },\n\n\n    /**\n     * Collect clones with pattern.\n     *\n     * @return {Void}\n     */\n    collect: function collect() {\n      var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      var slides = Components.Html.slides;\n      var _Glide$settings = Glide.settings,\n          perView = _Glide$settings.perView,\n          classes = _Glide$settings.classes;\n\n\n      var peekIncrementer = +!!Glide.settings.peek;\n      var part = perView + peekIncrementer;\n      var start = slides.slice(0, part);\n      var end = slides.slice(-part);\n\n      for (var r = 0; r < Math.max(1, Math.floor(perView / slides.length)); r++) {\n        for (var i = 0; i < start.length; i++) {\n          var clone = start[i].cloneNode(true);\n\n          clone.classList.add(classes.cloneSlide);\n\n          items.push(clone);\n        }\n\n        for (var _i = 0; _i < end.length; _i++) {\n          var _clone = end[_i].cloneNode(true);\n\n          _clone.classList.add(classes.cloneSlide);\n\n          items.unshift(_clone);\n        }\n      }\n\n      return items;\n    },\n\n\n    /**\n     * Append cloned slides with generated pattern.\n     *\n     * @return {Void}\n     */\n    append: function append() {\n      var items = this.items;\n      var _Components$Html = Components.Html,\n          wrapper = _Components$Html.wrapper,\n          slides = _Components$Html.slides;\n\n\n      var half = Math.floor(items.length / 2);\n      var prepend = items.slice(0, half).reverse();\n      var append = items.slice(half, items.length);\n      var width = Components.Sizes.slideWidth + 'px';\n\n      for (var i = 0; i < append.length; i++) {\n        wrapper.appendChild(append[i]);\n      }\n\n      for (var _i2 = 0; _i2 < prepend.length; _i2++) {\n        wrapper.insertBefore(prepend[_i2], slides[0]);\n      }\n\n      for (var _i3 = 0; _i3 < items.length; _i3++) {\n        items[_i3].style.width = width;\n      }\n    },\n\n\n    /**\n     * Remove all cloned slides.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      var items = this.items;\n\n\n      for (var i = 0; i < items.length; i++) {\n        Components.Html.wrapper.removeChild(items[i]);\n      }\n    }\n  };\n\n  define(Clones, 'grow', {\n    /**\n     * Gets additional dimentions value caused by clones.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      return (Components.Sizes.slideWidth + Components.Gaps.value) * Clones.items.length;\n    }\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('update', function () {\n    Clones.remove();\n    Clones.mount();\n    Clones.append();\n  });\n\n  /**\n   * Append additional slide's clones:\n   * - while glide's type is `carousel`\n   */\n  Events.on('build.before', function () {\n    if (Glide.isType('carousel')) {\n      Clones.append();\n    }\n  });\n\n  /**\n   * Remove clones HTMLElements:\n   * - on destroying, to bring HTML to its initial state\n   */\n  Events.on('destroy', function () {\n    Clones.remove();\n  });\n\n  return Clones;\n}\n\nvar EventsBinder = function () {\n  /**\n   * Construct a EventsBinder instance.\n   */\n  function EventsBinder() {\n    var listeners = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    classCallCheck(this, EventsBinder);\n\n    this.listeners = listeners;\n  }\n\n  /**\n   * Adds events listeners to arrows HTML elements.\n   *\n   * @param  {String|Array} events\n   * @param  {Element|Window|Document} el\n   * @param  {Function} closure\n   * @param  {Boolean|Object} capture\n   * @return {Void}\n   */\n\n\n  createClass(EventsBinder, [{\n    key: 'on',\n    value: function on(events, el, closure) {\n      var capture = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        this.listeners[events[i]] = closure;\n\n        el.addEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Removes event listeners from arrows HTML elements.\n     *\n     * @param  {String|Array} events\n     * @param  {Element|Window|Document} el\n     * @param  {Boolean|Object} capture\n     * @return {Void}\n     */\n\n  }, {\n    key: 'off',\n    value: function off(events, el) {\n      var capture = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      if (isString(events)) {\n        events = [events];\n      }\n\n      for (var i = 0; i < events.length; i++) {\n        el.removeEventListener(events[i], this.listeners[events[i]], capture);\n      }\n    }\n\n    /**\n     * Destroy collected listeners.\n     *\n     * @returns {Void}\n     */\n\n  }, {\n    key: 'destroy',\n    value: function destroy() {\n      delete this.listeners;\n    }\n  }]);\n  return EventsBinder;\n}();\n\nfunction Resize (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Resize = {\n    /**\n     * Initializes window bindings.\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `rezsize` listener to the window.\n     * It's a costly event, so we are debouncing it.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('resize', window, throttle(function () {\n        Events.emit('resize');\n      }, Glide.settings.throttle));\n    },\n\n\n    /**\n     * Unbinds listeners from the window.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('resize', window);\n    }\n  };\n\n  /**\n   * Remove bindings from window:\n   * - on destroying, to remove added EventListener\n   */\n  Events.on('destroy', function () {\n    Resize.unbind();\n    Binder.destroy();\n  });\n\n  return Resize;\n}\n\nvar VALID_DIRECTIONS = ['ltr', 'rtl'];\nvar FLIPED_MOVEMENTS = {\n  '>': '<',\n  '<': '>',\n  '=': '='\n};\n\nfunction Direction (Glide, Components, Events) {\n  var Direction = {\n    /**\n     * Setups gap value based on settings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.value = Glide.settings.direction;\n    },\n\n\n    /**\n     * Resolves pattern based on direction value\n     *\n     * @param {String} pattern\n     * @returns {String}\n     */\n    resolve: function resolve(pattern) {\n      var token = pattern.slice(0, 1);\n\n      if (this.is('rtl')) {\n        return pattern.split(token).join(FLIPED_MOVEMENTS[token]);\n      }\n\n      return pattern;\n    },\n\n\n    /**\n     * Checks value of direction mode.\n     *\n     * @param {String} direction\n     * @returns {Boolean}\n     */\n    is: function is(direction) {\n      return this.value === direction;\n    },\n\n\n    /**\n     * Applies direction class to the root HTML element.\n     *\n     * @return {Void}\n     */\n    addClass: function addClass() {\n      Components.Html.root.classList.add(Glide.settings.classes.direction[this.value]);\n    },\n\n\n    /**\n     * Removes direction class from the root HTML element.\n     *\n     * @return {Void}\n     */\n    removeClass: function removeClass() {\n      Components.Html.root.classList.remove(Glide.settings.classes.direction[this.value]);\n    }\n  };\n\n  define(Direction, 'value', {\n    /**\n     * Gets value of the direction.\n     *\n     * @returns {Number}\n     */\n    get: function get() {\n      return Direction._v;\n    },\n\n\n    /**\n     * Sets value of the direction.\n     *\n     * @param {String} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      if (VALID_DIRECTIONS.indexOf(value) > -1) {\n        Direction._v = value;\n      } else {\n        warn('Direction value must be `ltr` or `rtl`');\n      }\n    }\n  });\n\n  /**\n   * Clear direction class:\n   * - on destroy to bring HTML to its initial state\n   * - on update to remove class before reappling bellow\n   */\n  Events.on(['destroy', 'update'], function () {\n    Direction.removeClass();\n  });\n\n  /**\n   * Remount component:\n   * - on update to reflect changes in direction value\n   */\n  Events.on('update', function () {\n    Direction.mount();\n  });\n\n  /**\n   * Apply direction class:\n   * - before building to apply class for the first time\n   * - on updating to reapply direction class that may changed\n   */\n  Events.on(['build.before', 'update'], function () {\n    Direction.addClass();\n  });\n\n  return Direction;\n}\n\n/**\n * Reflects value of glide movement.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Rtl (Glide, Components) {\n  return {\n    /**\n     * Negates the passed translate if glide is in RTL option.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Components.Direction.is('rtl')) {\n        return -translate;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `gap` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Gap (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with number in the `gap` settings.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Gaps.value * Glide.index;\n    }\n  };\n}\n\n/**\n * Updates glide movement with width of additional clones width.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Grow (Glide, Components) {\n  return {\n    /**\n     * Adds to the passed translate width of the half of clones.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      return translate + Components.Clones.grow / 2;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `peek` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Peeking (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with a `peek` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      if (Glide.settings.focusAt >= 0) {\n        var peek = Components.Peek.value;\n\n        if (isObject(peek)) {\n          return translate - peek.before;\n        }\n\n        return translate - peek;\n      }\n\n      return translate;\n    }\n  };\n}\n\n/**\n * Updates glide movement with a `focusAt` settings.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction Focusing (Glide, Components) {\n  return {\n    /**\n     * Modifies passed translate value with index in the `focusAt` setting.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    modify: function modify(translate) {\n      var gap = Components.Gaps.value;\n      var width = Components.Sizes.width;\n      var focusAt = Glide.settings.focusAt;\n      var slideWidth = Components.Sizes.slideWidth;\n\n      if (focusAt === 'center') {\n        return translate - (width / 2 - slideWidth / 2);\n      }\n\n      return translate - slideWidth * focusAt - gap * focusAt;\n    }\n  };\n}\n\n/**\n * Applies diffrent transformers on translate value.\n *\n * @param  {Object} Glide\n * @param  {Object} Components\n * @return {Object}\n */\nfunction mutator (Glide, Components, Events) {\n  /**\n   * Merge instance transformers with collection of default transformers.\n   * It's important that the Rtl component be last on the list,\n   * so it reflects all previous transformations.\n   *\n   * @type {Array}\n   */\n  var TRANSFORMERS = [Gap, Grow, Peeking, Focusing].concat(Glide._t, [Rtl]);\n\n  return {\n    /**\n     * Piplines translate value with registered transformers.\n     *\n     * @param  {Number} translate\n     * @return {Number}\n     */\n    mutate: function mutate(translate) {\n      for (var i = 0; i < TRANSFORMERS.length; i++) {\n        var transformer = TRANSFORMERS[i];\n\n        if (isFunction(transformer) && isFunction(transformer().modify)) {\n          translate = transformer(Glide, Components, Events).modify(translate);\n        } else {\n          warn('Transformer should be a function that returns an object with `modify()` method');\n        }\n      }\n\n      return translate;\n    }\n  };\n}\n\nfunction Translate (Glide, Components, Events) {\n  var Translate = {\n    /**\n     * Sets value of translate on HTML element.\n     *\n     * @param {Number} value\n     * @return {Void}\n     */\n    set: function set(value) {\n      var transform = mutator(Glide, Components).mutate(value);\n\n      Components.Html.wrapper.style.transform = 'translate3d(' + -1 * transform + 'px, 0px, 0px)';\n    },\n\n\n    /**\n     * Removes value of translate from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transform = '';\n    }\n  };\n\n  /**\n   * Set new translate value:\n   * - on move to reflect index change\n   * - on updating via API to reflect possible changes in options\n   */\n  Events.on('move', function (context) {\n    var gap = Components.Gaps.value;\n    var length = Components.Sizes.length;\n    var width = Components.Sizes.slideWidth;\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('<')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(width * (length - 1));\n      });\n\n      return Translate.set(-width - gap * length);\n    }\n\n    if (Glide.isType('carousel') && Components.Run.isOffset('>')) {\n      Components.Transition.after(function () {\n        Events.emit('translate.jump');\n\n        Translate.set(0);\n      });\n\n      return Translate.set(width * length + gap * length);\n    }\n\n    return Translate.set(context.movement);\n  });\n\n  /**\n   * Remove translate:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Translate.remove();\n  });\n\n  return Translate;\n}\n\nfunction Transition (Glide, Components, Events) {\n  /**\n   * Holds inactivity status of transition.\n   * When true transition is not applied.\n   *\n   * @type {Boolean}\n   */\n  var disabled = false;\n\n  var Transition = {\n    /**\n     * Composes string of the CSS transition.\n     *\n     * @param {String} property\n     * @return {String}\n     */\n    compose: function compose(property) {\n      var settings = Glide.settings;\n\n      if (!disabled) {\n        return property + ' ' + this.duration + 'ms ' + settings.animationTimingFunc;\n      }\n\n      return property + ' 0ms ' + settings.animationTimingFunc;\n    },\n\n\n    /**\n     * Sets value of transition on HTML element.\n     *\n     * @param {String=} property\n     * @return {Void}\n     */\n    set: function set() {\n      var property = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : 'transform';\n\n      Components.Html.wrapper.style.transition = this.compose(property);\n    },\n\n\n    /**\n     * Removes value of transition from HTML element.\n     *\n     * @return {Void}\n     */\n    remove: function remove() {\n      Components.Html.wrapper.style.transition = '';\n    },\n\n\n    /**\n     * Runs callback after animation.\n     *\n     * @param  {Function} callback\n     * @return {Void}\n     */\n    after: function after(callback) {\n      setTimeout(function () {\n        callback();\n      }, this.duration);\n    },\n\n\n    /**\n     * Enable transition.\n     *\n     * @return {Void}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      this.set();\n    },\n\n\n    /**\n     * Disable transition.\n     *\n     * @return {Void}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      this.set();\n    }\n  };\n\n  define(Transition, 'duration', {\n    /**\n     * Gets duration of the transition based\n     * on currently running animation type.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var settings = Glide.settings;\n\n      if (Glide.isType('slider') && Components.Run.offset) {\n        return settings.rewindDuration;\n      }\n\n      return settings.animationDuration;\n    }\n  });\n\n  /**\n   * Set transition `style` value:\n   * - on each moving, because it may be cleared by offset move\n   */\n  Events.on('move', function () {\n    Transition.set();\n  });\n\n  /**\n   * Disable transition:\n   * - before initial build to avoid transitioning from `0` to `startAt` index\n   * - while resizing window and recalculating dimentions\n   * - on jumping from offset transition at start and end edges in `carousel` type\n   */\n  Events.on(['build.before', 'resize', 'translate.jump'], function () {\n    Transition.disable();\n  });\n\n  /**\n   * Enable transition:\n   * - on each running, because it may be disabled by offset move\n   */\n  Events.on('run', function () {\n    Transition.enable();\n  });\n\n  /**\n   * Remove transition:\n   * - on destroying to bring markup to its inital state\n   */\n  Events.on('destroy', function () {\n    Transition.remove();\n  });\n\n  return Transition;\n}\n\n/**\n * Test via a getter in the options object to see\n * if the passive property is accessed.\n *\n * @see https://github.com/WICG/EventListenerOptions/blob/gh-pages/explainer.md#feature-detection\n */\n\nvar supportsPassive = false;\n\ntry {\n  var opts = Object.defineProperty({}, 'passive', {\n    get: function get() {\n      supportsPassive = true;\n    }\n  });\n\n  window.addEventListener('testPassive', null, opts);\n  window.removeEventListener('testPassive', null, opts);\n} catch (e) {}\n\nvar supportsPassive$1 = supportsPassive;\n\nvar START_EVENTS = ['touchstart', 'mousedown'];\nvar MOVE_EVENTS = ['touchmove', 'mousemove'];\nvar END_EVENTS = ['touchend', 'touchcancel', 'mouseup', 'mouseleave'];\nvar MOUSE_EVENTS = ['mousedown', 'mousemove', 'mouseup', 'mouseleave'];\n\nfunction Swipe (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var swipeSin = 0;\n  var swipeStartX = 0;\n  var swipeStartY = 0;\n  var disabled = false;\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Swipe = {\n    /**\n     * Initializes swipe bindings.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bindSwipeStart();\n    },\n\n\n    /**\n     * Handler for `swipestart` event. Calculates entry points of the user's tap.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    start: function start(event) {\n      if (!disabled && !Glide.disabled) {\n        this.disable();\n\n        var swipe = this.touches(event);\n\n        swipeSin = null;\n        swipeStartX = toInt(swipe.pageX);\n        swipeStartY = toInt(swipe.pageY);\n\n        this.bindSwipeMove();\n        this.bindSwipeEnd();\n\n        Events.emit('swipe.start');\n      }\n    },\n\n\n    /**\n     * Handler for `swipemove` event. Calculates user's tap angle and distance.\n     *\n     * @param {Object} event\n     */\n    move: function move(event) {\n      if (!Glide.disabled) {\n        var _Glide$settings = Glide.settings,\n            touchAngle = _Glide$settings.touchAngle,\n            touchRatio = _Glide$settings.touchRatio,\n            classes = _Glide$settings.classes;\n\n\n        var swipe = this.touches(event);\n\n        var subExSx = toInt(swipe.pageX) - swipeStartX;\n        var subEySy = toInt(swipe.pageY) - swipeStartY;\n        var powEX = Math.abs(subExSx << 2);\n        var powEY = Math.abs(subEySy << 2);\n        var swipeHypotenuse = Math.sqrt(powEX + powEY);\n        var swipeCathetus = Math.sqrt(powEY);\n\n        swipeSin = Math.asin(swipeCathetus / swipeHypotenuse);\n\n        if (swipeSin * 180 / Math.PI < touchAngle) {\n          event.stopPropagation();\n\n          Components.Move.make(subExSx * toFloat(touchRatio));\n\n          Components.Html.root.classList.add(classes.dragging);\n\n          Events.emit('swipe.move');\n        } else {\n          return false;\n        }\n      }\n    },\n\n\n    /**\n     * Handler for `swipeend` event. Finitializes user's tap and decides about glide move.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    end: function end(event) {\n      if (!Glide.disabled) {\n        var settings = Glide.settings;\n\n        var swipe = this.touches(event);\n        var threshold = this.threshold(event);\n\n        var swipeDistance = swipe.pageX - swipeStartX;\n        var swipeDeg = swipeSin * 180 / Math.PI;\n        var steps = Math.round(swipeDistance / Components.Sizes.slideWidth);\n\n        this.enable();\n\n        if (swipeDistance > threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is positive and greater than threshold move backward.\n          if (settings.perTouch) {\n            steps = Math.min(steps, toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('<' + steps));\n        } else if (swipeDistance < -threshold && swipeDeg < settings.touchAngle) {\n          // While swipe is negative and lower than negative threshold move forward.\n          if (settings.perTouch) {\n            steps = Math.max(steps, -toInt(settings.perTouch));\n          }\n\n          if (Components.Direction.is('rtl')) {\n            steps = -steps;\n          }\n\n          Components.Run.make(Components.Direction.resolve('>' + steps));\n        } else {\n          // While swipe don't reach distance apply previous transform.\n          Components.Move.make();\n        }\n\n        Components.Html.root.classList.remove(settings.classes.dragging);\n\n        this.unbindSwipeMove();\n        this.unbindSwipeEnd();\n\n        Events.emit('swipe.end');\n      }\n    },\n\n\n    /**\n     * Binds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    bindSwipeStart: function bindSwipeStart() {\n      var _this = this;\n\n      var settings = Glide.settings;\n\n      if (settings.swipeThreshold) {\n        Binder.on(START_EVENTS[0], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n\n      if (settings.dragThreshold) {\n        Binder.on(START_EVENTS[1], Components.Html.wrapper, function (event) {\n          _this.start(event);\n        }, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds swipe's starting event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeStart: function unbindSwipeStart() {\n      Binder.off(START_EVENTS[0], Components.Html.wrapper, capture);\n      Binder.off(START_EVENTS[1], Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    bindSwipeMove: function bindSwipeMove() {\n      var _this2 = this;\n\n      Binder.on(MOVE_EVENTS, Components.Html.wrapper, throttle(function (event) {\n        _this2.move(event);\n      }, Glide.settings.throttle), capture);\n    },\n\n\n    /**\n     * Unbinds swipe's moving event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeMove: function unbindSwipeMove() {\n      Binder.off(MOVE_EVENTS, Components.Html.wrapper, capture);\n    },\n\n\n    /**\n     * Binds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    bindSwipeEnd: function bindSwipeEnd() {\n      var _this3 = this;\n\n      Binder.on(END_EVENTS, Components.Html.wrapper, function (event) {\n        _this3.end(event);\n      });\n    },\n\n\n    /**\n     * Unbinds swipe's ending event.\n     *\n     * @return {Void}\n     */\n    unbindSwipeEnd: function unbindSwipeEnd() {\n      Binder.off(END_EVENTS, Components.Html.wrapper);\n    },\n\n\n    /**\n     * Normalizes event touches points accorting to different types.\n     *\n     * @param {Object} event\n     */\n    touches: function touches(event) {\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return event;\n      }\n\n      return event.touches[0] || event.changedTouches[0];\n    },\n\n\n    /**\n     * Gets value of minimum swipe distance settings based on event type.\n     *\n     * @return {Number}\n     */\n    threshold: function threshold(event) {\n      var settings = Glide.settings;\n\n      if (MOUSE_EVENTS.indexOf(event.type) > -1) {\n        return settings.dragThreshold;\n      }\n\n      return settings.swipeThreshold;\n    },\n\n\n    /**\n     * Enables swipe event.\n     *\n     * @return {self}\n     */\n    enable: function enable() {\n      disabled = false;\n\n      Components.Transition.enable();\n\n      return this;\n    },\n\n\n    /**\n     * Disables swipe event.\n     *\n     * @return {self}\n     */\n    disable: function disable() {\n      disabled = true;\n\n      Components.Transition.disable();\n\n      return this;\n    }\n  };\n\n  /**\n   * Add component class:\n   * - after initial building\n   */\n  Events.on('build.after', function () {\n    Components.Html.root.classList.add(Glide.settings.classes.swipeable);\n  });\n\n  /**\n   * Remove swiping bindings:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Swipe.unbindSwipeStart();\n    Swipe.unbindSwipeMove();\n    Swipe.unbindSwipeEnd();\n    Binder.destroy();\n  });\n\n  return Swipe;\n}\n\nfunction Images (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Images = {\n    /**\n     * Binds listener to glide wrapper.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.bind();\n    },\n\n\n    /**\n     * Binds `dragstart` event on wrapper to prevent dragging images.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('dragstart', Components.Html.wrapper, this.dragstart);\n    },\n\n\n    /**\n     * Unbinds `dragstart` event on wrapper.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('dragstart', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Event handler. Prevents dragging.\n     *\n     * @return {Void}\n     */\n    dragstart: function dragstart(event) {\n      event.preventDefault();\n    }\n  };\n\n  /**\n   * Remove bindings from images:\n   * - on destroying, to remove added EventListeners\n   */\n  Events.on('destroy', function () {\n    Images.unbind();\n    Binder.destroy();\n  });\n\n  return Images;\n}\n\nfunction Anchors (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds detaching status of anchors.\n   * Prevents detaching of already detached anchors.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var detached = false;\n\n  /**\n   * Holds preventing status of anchors.\n   * If `true` redirection after click will be disabled.\n   *\n   * @private\n   * @type {Boolean}\n   */\n  var prevented = false;\n\n  var Anchors = {\n    /**\n     * Setups a initial state of anchors component.\n     *\n     * @returns {Void}\n     */\n    mount: function mount() {\n      /**\n       * Holds collection of anchors elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._a = Components.Html.wrapper.querySelectorAll('a');\n\n      this.bind();\n    },\n\n\n    /**\n     * Binds events to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('click', Components.Html.wrapper, this.click);\n    },\n\n\n    /**\n     * Unbinds events attached to anchors inside a track.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('click', Components.Html.wrapper);\n    },\n\n\n    /**\n     * Handler for click event. Prevents clicks when glide is in `prevent` status.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      if (prevented) {\n        event.stopPropagation();\n        event.preventDefault();\n      }\n    },\n\n\n    /**\n     * Detaches anchors click event inside glide.\n     *\n     * @return {self}\n     */\n    detach: function detach() {\n      prevented = true;\n\n      if (!detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = false;\n\n          this.items[i].setAttribute('data-href', this.items[i].getAttribute('href'));\n\n          this.items[i].removeAttribute('href');\n        }\n\n        detached = true;\n      }\n\n      return this;\n    },\n\n\n    /**\n     * Attaches anchors click events inside glide.\n     *\n     * @return {self}\n     */\n    attach: function attach() {\n      prevented = false;\n\n      if (detached) {\n        for (var i = 0; i < this.items.length; i++) {\n          this.items[i].draggable = true;\n\n          this.items[i].setAttribute('href', this.items[i].getAttribute('data-href'));\n        }\n\n        detached = false;\n      }\n\n      return this;\n    }\n  };\n\n  define(Anchors, 'items', {\n    /**\n     * Gets collection of the arrows HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Anchors._a;\n    }\n  });\n\n  /**\n   * Detach anchors inside slides:\n   * - on swiping, so they won't redirect to its `href` attributes\n   */\n  Events.on('swipe.move', function () {\n    Anchors.detach();\n  });\n\n  /**\n   * Attach anchors inside slides:\n   * - after swiping and transitions ends, so they can redirect after click again\n   */\n  Events.on('swipe.end', function () {\n    Components.Transition.after(function () {\n      Anchors.attach();\n    });\n  });\n\n  /**\n   * Unbind anchors inside slides:\n   * - on destroying, to bring anchors to its initial state\n   */\n  Events.on('destroy', function () {\n    Anchors.attach();\n    Anchors.unbind();\n    Binder.destroy();\n  });\n\n  return Anchors;\n}\n\nvar NAV_SELECTOR = '[data-glide-el=\"controls[nav]\"]';\nvar CONTROLS_SELECTOR = '[data-glide-el^=\"controls\"]';\n\nfunction Controls (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var capture = supportsPassive$1 ? { passive: true } : false;\n\n  var Controls = {\n    /**\n     * Inits arrows. Binds events listeners\n     * to the arrows HTML elements.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      /**\n       * Collection of navigation HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._n = Components.Html.root.querySelectorAll(NAV_SELECTOR);\n\n      /**\n       * Collection of controls HTML elements.\n       *\n       * @private\n       * @type {HTMLCollection}\n       */\n      this._c = Components.Html.root.querySelectorAll(CONTROLS_SELECTOR);\n\n      this.addBindings();\n    },\n\n\n    /**\n     * Sets active class to current slide.\n     *\n     * @return {Void}\n     */\n    setActive: function setActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.addClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Removes active class to current slide.\n     *\n     * @return {Void}\n     */\n    removeActive: function removeActive() {\n      for (var i = 0; i < this._n.length; i++) {\n        this.removeClass(this._n[i].children);\n      }\n    },\n\n\n    /**\n     * Toggles active class on items inside navigation.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    addClass: function addClass(controls) {\n      var settings = Glide.settings;\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.add(settings.classes.activeNav);\n\n        siblings(item).forEach(function (sibling) {\n          sibling.classList.remove(settings.classes.activeNav);\n        });\n      }\n    },\n\n\n    /**\n     * Removes active class from active control.\n     *\n     * @param  {HTMLElement} controls\n     * @return {Void}\n     */\n    removeClass: function removeClass(controls) {\n      var item = controls[Glide.index];\n\n      if (item) {\n        item.classList.remove(Glide.settings.classes.activeNav);\n      }\n    },\n\n\n    /**\n     * Adds handles to the each group of controls.\n     *\n     * @return {Void}\n     */\n    addBindings: function addBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.bind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Removes handles from the each group of controls.\n     *\n     * @return {Void}\n     */\n    removeBindings: function removeBindings() {\n      for (var i = 0; i < this._c.length; i++) {\n        this.unbind(this._c[i].children);\n      }\n    },\n\n\n    /**\n     * Binds events to arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    bind: function bind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.on('click', elements[i], this.click);\n        Binder.on('touchstart', elements[i], this.click, capture);\n      }\n    },\n\n\n    /**\n     * Unbinds events binded to the arrows HTML elements.\n     *\n     * @param {HTMLCollection} elements\n     * @return {Void}\n     */\n    unbind: function unbind(elements) {\n      for (var i = 0; i < elements.length; i++) {\n        Binder.off(['click', 'touchstart'], elements[i]);\n      }\n    },\n\n\n    /**\n     * Handles `click` event on the arrows HTML elements.\n     * Moves slider in driection precised in\n     * `data-glide-dir` attribute.\n     *\n     * @param {Object} event\n     * @return {Void}\n     */\n    click: function click(event) {\n      event.preventDefault();\n\n      Components.Run.make(Components.Direction.resolve(event.currentTarget.getAttribute('data-glide-dir')));\n    }\n  };\n\n  define(Controls, 'items', {\n    /**\n     * Gets collection of the controls HTML elements.\n     *\n     * @return {HTMLElement[]}\n     */\n    get: function get() {\n      return Controls._c;\n    }\n  });\n\n  /**\n   * Swap active class of current navigation item:\n   * - after mounting to set it to initial index\n   * - after each move to the new index\n   */\n  Events.on(['mount.after', 'move.after'], function () {\n    Controls.setActive();\n  });\n\n  /**\n   * Remove bindings and HTML Classes:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Controls.removeBindings();\n    Controls.removeActive();\n    Binder.destroy();\n  });\n\n  return Controls;\n}\n\nfunction Keyboard (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Keyboard = {\n    /**\n     * Binds keyboard events on component mount.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      if (Glide.settings.keyboard) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Adds keyboard press events.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      Binder.on('keyup', document, this.press);\n    },\n\n\n    /**\n     * Removes keyboard press events.\n     *\n     * @return {Void}\n     */\n    unbind: function unbind() {\n      Binder.off('keyup', document);\n    },\n\n\n    /**\n     * Handles keyboard's arrows press and moving glide foward and backward.\n     *\n     * @param  {Object} event\n     * @return {Void}\n     */\n    press: function press(event) {\n      if (event.keyCode === 39) {\n        Components.Run.make(Components.Direction.resolve('>'));\n      }\n\n      if (event.keyCode === 37) {\n        Components.Run.make(Components.Direction.resolve('<'));\n      }\n    }\n  };\n\n  /**\n   * Remove bindings from keyboard:\n   * - on destroying to remove added events\n   * - on updating to remove events before remounting\n   */\n  Events.on(['destroy', 'update'], function () {\n    Keyboard.unbind();\n  });\n\n  /**\n   * Remount component\n   * - on updating to reflect potential changes in settings\n   */\n  Events.on('update', function () {\n    Keyboard.mount();\n  });\n\n  /**\n   * Destroy binder:\n   * - on destroying to remove listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Keyboard;\n}\n\nfunction Autoplay (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  var Autoplay = {\n    /**\n     * Initializes autoplaying and events.\n     *\n     * @return {Void}\n     */\n    mount: function mount() {\n      this.start();\n\n      if (Glide.settings.hoverpause) {\n        this.bind();\n      }\n    },\n\n\n    /**\n     * Starts autoplaying in configured interval.\n     *\n     * @param {Boolean|Number} force Run autoplaying with passed interval regardless of `autoplay` settings\n     * @return {Void}\n     */\n    start: function start() {\n      var _this = this;\n\n      if (Glide.settings.autoplay) {\n        if (isUndefined(this._i)) {\n          this._i = setInterval(function () {\n            _this.stop();\n\n            Components.Run.make('>');\n\n            _this.start();\n          }, this.time);\n        }\n      }\n    },\n\n\n    /**\n     * Stops autorunning of the glide.\n     *\n     * @return {Void}\n     */\n    stop: function stop() {\n      this._i = clearInterval(this._i);\n    },\n\n\n    /**\n     * Stops autoplaying while mouse is over glide's area.\n     *\n     * @return {Void}\n     */\n    bind: function bind() {\n      var _this2 = this;\n\n      Binder.on('mouseover', Components.Html.root, function () {\n        _this2.stop();\n      });\n\n      Binder.on('mouseout', Components.Html.root, function () {\n        _this2.start();\n      });\n    },\n\n\n    /**\n     * Unbind mouseover events.\n     *\n     * @returns {Void}\n     */\n    unbind: function unbind() {\n      Binder.off(['mouseover', 'mouseout'], Components.Html.root);\n    }\n  };\n\n  define(Autoplay, 'time', {\n    /**\n     * Gets time period value for the autoplay interval. Prioritizes\n     * times in `data-glide-autoplay` attrubutes over options.\n     *\n     * @return {Number}\n     */\n    get: function get() {\n      var autoplay = Components.Html.slides[Glide.index].getAttribute('data-glide-autoplay');\n\n      if (autoplay) {\n        return toInt(autoplay);\n      }\n\n      return toInt(Glide.settings.autoplay);\n    }\n  });\n\n  /**\n   * Stop autoplaying and unbind events:\n   * - on destroying, to clear defined interval\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['destroy', 'update'], function () {\n    Autoplay.unbind();\n  });\n\n  /**\n   * Stop autoplaying:\n   * - before each run, to restart autoplaying\n   * - on pausing via API\n   * - on destroying, to clear defined interval\n   * - while starting a swipe\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on(['run.before', 'pause', 'destroy', 'swipe.start', 'update'], function () {\n    Autoplay.stop();\n  });\n\n  /**\n   * Start autoplaying:\n   * - after each run, to restart autoplaying\n   * - on playing via API\n   * - while ending a swipe\n   */\n  Events.on(['run.after', 'play', 'swipe.end'], function () {\n    Autoplay.start();\n  });\n\n  /**\n   * Remount autoplaying:\n   * - on updating via API to reset interval that may changed\n   */\n  Events.on('update', function () {\n    Autoplay.mount();\n  });\n\n  /**\n   * Destroy a binder:\n   * - on destroying glide instance to clearup listeners\n   */\n  Events.on('destroy', function () {\n    Binder.destroy();\n  });\n\n  return Autoplay;\n}\n\n/**\n * Sorts keys of breakpoint object so they will be ordered from lower to bigger.\n *\n * @param {Object} points\n * @returns {Object}\n */\nfunction sortBreakpoints(points) {\n  if (isObject(points)) {\n    return sortKeys(points);\n  } else {\n    warn('Breakpoints option must be an object');\n  }\n\n  return {};\n}\n\nfunction Breakpoints (Glide, Components, Events) {\n  /**\n   * Instance of the binder for DOM Events.\n   *\n   * @type {EventsBinder}\n   */\n  var Binder = new EventsBinder();\n\n  /**\n   * Holds reference to settings.\n   *\n   * @type {Object}\n   */\n  var settings = Glide.settings;\n\n  /**\n   * Holds reference to breakpoints object in settings. Sorts breakpoints\n   * from smaller to larger. It is required in order to proper\n   * matching currently active breakpoint settings.\n   *\n   * @type {Object}\n   */\n  var points = sortBreakpoints(settings.breakpoints);\n\n  /**\n   * Cache initial settings before overwritting.\n   *\n   * @type {Object}\n   */\n  var defaults = _extends({}, settings);\n\n  var Breakpoints = {\n    /**\n     * Matches settings for currectly matching media breakpoint.\n     *\n     * @param {Object} points\n     * @returns {Object}\n     */\n    match: function match(points) {\n      if (typeof window.matchMedia !== 'undefined') {\n        for (var point in points) {\n          if (points.hasOwnProperty(point)) {\n            if (window.matchMedia('(max-width: ' + point + 'px)').matches) {\n              return points[point];\n            }\n          }\n        }\n      }\n\n      return defaults;\n    }\n  };\n\n  /**\n   * Overwrite instance settings with currently matching breakpoint settings.\n   * This happens right after component initialization.\n   */\n  _extends(settings, Breakpoints.match(points));\n\n  /**\n   * Update glide with settings of matched brekpoint:\n   * - window resize to update slider\n   */\n  Binder.on('resize', window, throttle(function () {\n    Glide.settings = mergeOptions(settings, Breakpoints.match(points));\n  }, Glide.settings.throttle));\n\n  /**\n   * Resort and update default settings:\n   * - on reinit via API, so breakpoint matching will be performed with options\n   */\n  Events.on('update', function () {\n    points = sortBreakpoints(points);\n\n    defaults = _extends({}, settings);\n  });\n\n  /**\n   * Unbind resize listener:\n   * - on destroying, to bring markup to its initial state\n   */\n  Events.on('destroy', function () {\n    Binder.off('resize', window);\n  });\n\n  return Breakpoints;\n}\n\nvar COMPONENTS = {\n  // Required\n  Html: Html,\n  Translate: Translate,\n  Transition: Transition,\n  Direction: Direction,\n  Peek: Peek,\n  Sizes: Sizes,\n  Gaps: Gaps,\n  Move: Move,\n  Clones: Clones,\n  Resize: Resize,\n  Build: Build,\n  Run: Run,\n\n  // Optional\n  Swipe: Swipe,\n  Images: Images,\n  Anchors: Anchors,\n  Controls: Controls,\n  Keyboard: Keyboard,\n  Autoplay: Autoplay,\n  Breakpoints: Breakpoints\n};\n\nvar Glide$1 = function (_Core) {\n  inherits(Glide$$1, _Core);\n\n  function Glide$$1() {\n    classCallCheck(this, Glide$$1);\n    return possibleConstructorReturn(this, (Glide$$1.__proto__ || Object.getPrototypeOf(Glide$$1)).apply(this, arguments));\n  }\n\n  createClass(Glide$$1, [{\n    key: 'mount',\n    value: function mount() {\n      var extensions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      return get(Glide$$1.prototype.__proto__ || Object.getPrototypeOf(Glide$$1.prototype), 'mount', this).call(this, _extends({}, COMPONENTS, extensions));\n    }\n  }]);\n  return Glide$$1;\n}(Glide);\n\nexport default Glide$1;\n"]},"metadata":{},"sourceType":"module"}