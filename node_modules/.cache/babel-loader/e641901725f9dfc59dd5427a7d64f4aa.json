{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"/Users/bdeguigne/Documents/Game Bringer/src/components/OtherGamesSlider.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleCard from \"./SimpleCard\";\nimport HorizontalSlider from \"./HorizontalSlider\";\n\nconst OtherGamesSlider = props => {\n  _s();\n\n  const [sliderLoaded, setSliderLoaded] = useState(false);\n  const [removeSkeleton, setRemoveSkeleton] = useState(false);\n\n  const sliderOnLoad = () => {\n    if (sliderLoaded === false) {\n      setSliderLoaded(true);\n      setTimeout(() => {\n        setRemoveSkeleton(true);\n      }, 500);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(HorizontalSlider, {\n    sliderName: props.sliderName,\n    title: props.title,\n    isLoading: props.data.length === 0,\n    imageLoaded: sliderLoaded,\n    removeSkeleton: removeSkeleton,\n    children: props.data.map((game, i) => {\n      return /*#__PURE__*/_jsxDEV(SimpleCard, {\n        onLoad: sliderOnLoad,\n        coverID: game.coverID,\n        game: game\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 25\n      }, this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n\n_s(OtherGamesSlider, \"3/ElsGY7Ca3FZHgYbyXtjb0V3J0=\");\n\n_c = OtherGamesSlider;\nOtherGamesSlider.propTypes = {\n  sliderName: PropTypes.string.isRequired,\n  title: PropTypes.string.isRequired,\n  data: PropTypes.array.isRequired\n};\nexport default OtherGamesSlider;\n\nvar _c;\n\n$RefreshReg$(_c, \"OtherGamesSlider\");","map":{"version":3,"sources":["/Users/bdeguigne/Documents/Game Bringer/src/components/OtherGamesSlider.js"],"names":["React","useState","PropTypes","SimpleCard","HorizontalSlider","OtherGamesSlider","props","sliderLoaded","setSliderLoaded","removeSkeleton","setRemoveSkeleton","sliderOnLoad","setTimeout","sliderName","title","data","length","map","game","i","coverID","propTypes","string","isRequired","array"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,gBAAP,MAA6B,oBAA7B;;AAEA,MAAMC,gBAAgB,GAAGC,KAAK,IAAI;AAAA;;AAC9B,QAAM,CAACC,YAAD,EAAeC,eAAf,IAAkCP,QAAQ,CAAC,KAAD,CAAhD;AACA,QAAM,CAACQ,cAAD,EAAiBC,iBAAjB,IAAsCT,QAAQ,CAAC,KAAD,CAApD;;AAEA,QAAMU,YAAY,GAAG,MAAM;AACvB,QAAIJ,YAAY,KAAK,KAArB,EAA4B;AACxBC,MAAAA,eAAe,CAAC,IAAD,CAAf;AACAI,MAAAA,UAAU,CAAC,MAAM;AACbF,QAAAA,iBAAiB,CAAC,IAAD,CAAjB;AACH,OAFS,EAEP,GAFO,CAAV;AAGH;AACJ,GAPD;;AASA,sBACI,QAAC,gBAAD;AAAkB,IAAA,UAAU,EAAEJ,KAAK,CAACO,UAApC;AAAgD,IAAA,KAAK,EAAEP,KAAK,CAACQ,KAA7D;AAAoE,IAAA,SAAS,EAAER,KAAK,CAACS,IAAN,CAAWC,MAAX,KAAsB,CAArG;AAAwG,IAAA,WAAW,EAAET,YAArH;AAAmI,IAAA,cAAc,EAAEE,cAAnJ;AAAA,cACKH,KAAK,CAACS,IAAN,CAAWE,GAAX,CAAe,CAACC,IAAD,EAAOC,CAAP,KAAa;AACrB,0BACI,QAAC,UAAD;AAAY,QAAA,MAAM,EAAER,YAApB;AAA0C,QAAA,OAAO,EAAEO,IAAI,CAACE,OAAxD;AAAiE,QAAA,IAAI,EAAEF;AAAvE,SAAuCC,CAAvC;AAAA;AAAA;AAAA;AAAA,cADJ;AAGH,KAJJ;AADL;AAAA;AAAA;AAAA;AAAA,UADJ;AAUH,CAvBD;;GAAMd,gB;;KAAAA,gB;AAyBNA,gBAAgB,CAACgB,SAAjB,GAA6B;AACzBR,EAAAA,UAAU,EAAEX,SAAS,CAACoB,MAAV,CAAiBC,UADJ;AAEzBT,EAAAA,KAAK,EAAEZ,SAAS,CAACoB,MAAV,CAAiBC,UAFC;AAGzBR,EAAAA,IAAI,EAAGb,SAAS,CAACsB,KAAV,CAAgBD;AAHE,CAA7B;AAMA,eAAelB,gBAAf","sourcesContent":["import React, {useState} from 'react';\nimport PropTypes from 'prop-types';\nimport SimpleCard from \"./SimpleCard\";\nimport HorizontalSlider from \"./HorizontalSlider\";\n\nconst OtherGamesSlider = props => {\n    const [sliderLoaded, setSliderLoaded] = useState(false);\n    const [removeSkeleton, setRemoveSkeleton] = useState(false);\n\n    const sliderOnLoad = () => {\n        if (sliderLoaded === false) {\n            setSliderLoaded(true);\n            setTimeout(() => {\n                setRemoveSkeleton(true);\n            }, 500)\n        }\n    }\n\n    return (\n        <HorizontalSlider sliderName={props.sliderName} title={props.title} isLoading={props.data.length === 0} imageLoaded={sliderLoaded} removeSkeleton={removeSkeleton} >\n            {props.data.map((game, i) => {\n                    return (\n                        <SimpleCard onLoad={sliderOnLoad} key={i} coverID={game.coverID} game={game} />\n                    )\n                })\n            }\n        </HorizontalSlider>\n    );\n};\n\nOtherGamesSlider.propTypes = {\n    sliderName: PropTypes.string.isRequired,\n    title: PropTypes.string.isRequired,\n    data : PropTypes.array.isRequired\n};\n\nexport default OtherGamesSlider;\n"]},"metadata":{},"sourceType":"module"}